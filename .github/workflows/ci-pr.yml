

# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: CI - Pull Request
on:
  pull_request_target:
jobs:
  build:
    strategy:
      matrix:
        java-version: [ 17 ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3.11.0
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java-version }}
      - name: Cache SonarCloud packages
        if: "matrix.java-version == 17"
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven2-
      - name: Build and test with Maven - ${{ matrix.java-version }}
        run: |
          git config --global user.email "github-action@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          ./mvnw clean install -B -Pspring -Pjdk${{ matrix.java-version }} --settings .mvn/settings.xml
        env:
          GIT_COMMIT: ${{github.event.workflow_run.head_commit.id}}
          HEAD_BRANCH: ${{github.event.workflow_run.head_branch}}
          MAVEN_GITHUB_TOKEN: "${{secrets.GITHUB_TOKEN}}"
          MAVEN_SONATYPE_USERNAME: "${{secrets.MAVEN_SONATYPE_USERNAME}}"
          MAVEN_SONATYPE_TOKEN: "${{secrets.MAVEN_SONATYPE_TOKEN}}"
      #      - name: Deploy Snapshots
      #        if: "github.event_name != 'pull_request' && matrix.java-version == 17"
      #        env:
      #          MAVEN_GITHUB_TOKEN: "${{secrets.GITHUB_TOKEN}}"
      #          MAVEN_SONATYPE_USERNAME: "${{secrets.MAVEN_SONATYPE_USERNAME}}"
      #          MAVEN_SONATYPE_TOKEN: "${{secrets.MAVEN_SONATYPE_TOKEN}}"
      #        run: ./mvnw deploy -B -Pspring -Powasp --settings .mvn/settings.xml
      - name: Clean Maven cache
        run: |
          find ~/.m2/repository -type d -name '*SNAPSHOT' | xargs rm -fr
