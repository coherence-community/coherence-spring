memberSearchIndex = [{"p":"com.oracle.coherence.spring.configuration.session","c":"AbstractSessionConfigurationBean","l":"AbstractSessionConfigurationBean()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.configuration.session","c":"AbstractSessionConfigurationBean","l":"AbstractSessionConfigurationBean(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"addListener(AbstractRepositoryBase.Listener<? super T>)","u":"addListener(com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"addListener(AbstractRepositoryBase.Listener<? super T>)","u":"addListener(com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"ListenerSupport","l":"addListener(AbstractRepositoryBase.Listener<? super T>)","u":"addListener(com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"addListener(Filter<?>, AbstractRepositoryBase.Listener<? super T>)","u":"addListener(com.tangosol.util.Filter,com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"addListener(Filter<?>, AbstractRepositoryBase.Listener<? super T>)","u":"addListener(com.tangosol.util.Filter,com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"ListenerSupport","l":"addListener(Filter<?>, AbstractRepositoryBase.Listener<? super T>)","u":"addListener(com.tangosol.util.Filter,com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"addListener(ID, AbstractRepositoryBase.Listener<? super T>)","u":"addListener(ID,com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"addListener(ID, AbstractRepositoryBase.Listener<? super T>)","u":"addListener(ID,com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"ListenerSupport","l":"addListener(ID, AbstractRepositoryBase.Listener<? super T>)","u":"addListener(ID,com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"MapListenerRegistrationBean","l":"addMapListener(AnnotatedMapListener<?, ?>)","u":"addMapListener(com.oracle.coherence.spring.event.mapevent.AnnotatedMapListener)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"addType(MapEventType)","u":"addType(com.oracle.coherence.spring.event.mapevent.MapEventType)"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"afterPropertiesSet()"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryFactoryBean","l":"afterPropertiesSet()"},{"p":"com.oracle.coherence.spring","c":"SpringBasedCoherenceSession","l":"afterPropertiesSet()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CommonFilterFactories","l":"alwaysFactory()"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"CoherenceQueryCreator","l":"and(Part, QueryState, Iterator<Object>)","u":"and(org.springframework.data.repository.query.parser.Part,com.oracle.coherence.spring.data.repository.query.QueryState,java.util.Iterator)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"AnnotatedMapListener","l":"AnnotatedMapListener(MethodMapListener<K, V>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.mapevent.MethodMapListener)"},{"p":"com.oracle.coherence.spring.configuration","c":"MapEventTransformerService","l":"applicationContext"},{"p":"com.oracle.coherence.spring.annotation","c":"CommitStrategy","l":"ASYNC"},{"p":"com.oracle.coherence.spring.session.serialization.pof","c":"AuthenticationPofSerializer","l":"AuthenticationPofSerializer()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"average(Filter<?>, Remote.ToBigDecimalFunction<? super T>)","u":"average(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"average(Filter<?>, Remote.ToBigDecimalFunction<? super T>)","u":"average(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"average(Filter<?>, Remote.ToDoubleFunction<? super T>)","u":"average(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"average(Filter<?>, Remote.ToDoubleFunction<? super T>)","u":"average(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"average(Filter<?>, Remote.ToIntFunction<? super T>)","u":"average(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"average(Filter<?>, Remote.ToIntFunction<? super T>)","u":"average(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"average(Filter<?>, Remote.ToLongFunction<? super T>)","u":"average(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"average(Filter<?>, Remote.ToLongFunction<? super T>)","u":"average(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"average(Remote.ToBigDecimalFunction<? super T>)","u":"average(com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"average(Remote.ToBigDecimalFunction<? super T>)","u":"average(com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"average(Remote.ToDoubleFunction<? super T>)","u":"average(com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"average(Remote.ToDoubleFunction<? super T>)","u":"average(com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"average(Remote.ToIntFunction<? super T>)","u":"average(com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"average(Remote.ToIntFunction<? super T>)","u":"average(com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"average(Remote.ToLongFunction<? super T>)","u":"average(com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"average(Remote.ToLongFunction<? super T>)","u":"average(com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"BackingAsyncRepository(NamedMap<ID, T>, MappingContext<CoherencePersistentEntity<T>, CoherencePersistentProperty>, Class<? extends T>)","u":"%3Cinit%3E(com.tangosol.net.NamedMap,org.springframework.data.mapping.context.MappingContext,java.lang.Class)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"BackingRepository(NamedMap<ID, T>, MappingContext<CoherencePersistentEntity<T>, CoherencePersistentProperty>, Class<? extends T>)","u":"%3Cinit%3E(com.tangosol.net.NamedMap,org.springframework.data.mapping.context.MappingContext,java.lang.Class)"},{"p":"com.oracle.coherence.spring.event","c":"BaseMethodObserver","l":"BaseMethodObserver(String, Method, ApplicationContext)","u":"%3Cinit%3E(java.lang.String,java.lang.reflect.Method,org.springframework.context.ApplicationContext)"},{"p":"com.oracle.coherence.spring.annotation","c":"CoherencePublisherScan","l":"basePackageClasses()"},{"p":"com.oracle.coherence.spring.data.config","c":"EnableCoherenceRepositories","l":"basePackageClasses()"},{"p":"com.oracle.coherence.spring.annotation","c":"CoherencePublisherScan","l":"basePackages()"},{"p":"com.oracle.coherence.spring.data.config","c":"EnableCoherenceRepositories","l":"basePackages()"},{"p":"com.oracle.coherence.spring.event","c":"BaseMethodObserver","l":"beanName"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.metrics","c":"CoherenceMetricsAutoConfiguration","l":"bindCoherenceMetricsToRegistry(MeterRegistry)","u":"bindCoherenceMetricsToRegistry(io.micrometer.core.instrument.MeterRegistry)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceGrpcClient","l":"buildSession(CoherenceConfigClientProperties)","u":"buildSession(com.oracle.coherence.spring.boot.config.CoherenceConfigClientProperties)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataLoader","l":"buildSourceNames(CoherenceConfigDataResource)","u":"buildSourceNames(com.oracle.coherence.spring.boot.config.CoherenceConfigDataResource)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"EnableCoherenceHttpSession","l":"cache()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"CacheAbstractionProperties()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"CacheLifecycleEventHandler","l":"CacheLifecycleEventHandler(MethodEventObserver<CacheLifecycleEvent>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"CacheEventHandler","l":"cacheName"},{"p":"com.oracle.coherence.spring.annotation","c":"View","l":"cacheValues()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CachingEnabledCondition","l":"CachingEnabledCondition()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CommonExtractorFactories","l":"chainedExtractor()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CommonExtractorFactories","l":"chainedExtractors()"},{"p":"com.oracle.coherence.spring","c":"CoherenceBeanExpressionResolver","l":"cleanupParameterResolver()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCache","l":"clear()"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"clearAllSessions()"},{"p":"com.oracle.coherence.spring.configuration.session","c":"SessionType","l":"CLIENT"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceInstanceType","l":"CLIENT"},{"p":"com.oracle.coherence.spring.configuration.session","c":"ClientSessionConfigurationBean","l":"ClientSessionConfigurationBean()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceGrpcClient","l":"close()"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherenceTopicListenerSubscribers","l":"close()"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"close()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceInstanceType","l":"CLUSTER"},{"p":"com.oracle.coherence.spring.configuration","c":"NamedCacheConfiguration","l":"COHERENCE_ASYNC_CACHE_BEAN_NAME"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"COHERENCE_BEAN_NAME"},{"p":"com.oracle.coherence.spring.configuration","c":"NamedCacheConfiguration","l":"COHERENCE_CACHE_BEAN_NAME"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"COHERENCE_CLUSTER_BEAN_NAME"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"COHERENCE_CONFIGURATION_BEAN_NAME"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"COHERENCE_CONFIGURER_BEAN_NAME"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataLocationResolver","l":"COHERENCE_PREFIX"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"COHERENCE_SERVER_BEAN_NAME"},{"p":"com.oracle.coherence.spring.configuration","c":"NamedCacheConfiguration","l":"COHERENCE_VIEW_BEAN_NAME"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanFactoryBuilder.CoherenceApplicationContext","l":"CoherenceApplicationContext(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceAutoConfiguration","l":"CoherenceAutoConfiguration()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceAutoConfiguration","l":"coherenceAutoConfigurationBeanFactoryPostProcessor(ConfigurableEnvironment)","u":"coherenceAutoConfigurationBeanFactoryPostProcessor(org.springframework.core.env.ConfigurableEnvironment)"},{"p":"com.oracle.coherence.spring","c":"CoherenceBeanExpressionResolver","l":"CoherenceBeanExpressionResolver(ExpressionParser)","u":"%3Cinit%3E(com.tangosol.config.expression.ExpressionParser)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCache","l":"CoherenceCache(NamedCache<Object, Object>, CoherenceCacheConfiguration)","u":"%3Cinit%3E(com.tangosol.net.NamedCache,com.oracle.coherence.spring.cache.CoherenceCacheConfiguration)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"CoherenceCacheConfiguration()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"CoherenceCacheConfiguration(Duration)","u":"%3Cinit%3E(java.time.Duration)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheManager","l":"CoherenceCacheManager(Coherence)","u":"%3Cinit%3E(com.tangosol.net.Coherence)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheManager","l":"CoherenceCacheManager(Coherence, CoherenceCacheConfiguration)","u":"%3Cinit%3E(com.tangosol.net.Coherence,com.oracle.coherence.spring.cache.CoherenceCacheConfiguration)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"CoherenceConfigClientProperties()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataLoader","l":"CoherenceConfigDataLoader()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataLocationResolver","l":"CoherenceConfigDataLocationResolver()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataResource","l":"CoherenceConfigDataResource(CoherenceConfigClientProperties, boolean, Profiles)","u":"%3Cinit%3E(com.oracle.coherence.spring.boot.config.CoherenceConfigClientProperties,boolean,org.springframework.boot.context.config.Profiles)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceAutoConfiguration","l":"coherenceConfigurerCustomizer(CoherenceProperties)","u":"coherenceConfigurerCustomizer(com.oracle.coherence.spring.boot.autoconfigure.CoherenceProperties)"},{"p":"com.oracle.coherence.spring","c":"CoherenceContext","l":"CoherenceContext(ApplicationContext)","u":"%3Cinit%3E(org.springframework.context.ApplicationContext)"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceConversionServicePostProcessor","l":"CoherenceConversionServicePostProcessor()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.event","c":"CoherenceEventListenerCandidates","l":"CoherenceEventListenerCandidates(Map<String, List<Method>>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"coherenceEventListenerMethodProcessor()"},{"p":"com.oracle.coherence.spring.event","c":"CoherenceEventListenerMethodProcessor","l":"CoherenceEventListenerMethodProcessor()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceGenericConverter","l":"CoherenceGenericConverter()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceGrpcClient","l":"CoherenceGrpcClient(CoherenceConfigClientProperties)","u":"%3Cinit%3E(com.oracle.coherence.spring.boot.config.CoherenceConfigClientProperties)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"CoherenceHttpSessionConfiguration","l":"CoherenceHttpSessionConfiguration()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"CoherenceIndexedSessionRepository(Session)","u":"%3Cinit%3E(com.tangosol.net.Session)"},{"p":"com.oracle.coherence.spring","c":"CoherenceInjector","l":"CoherenceInjector()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"CoherenceLifecycleEventHandler","l":"CoherenceLifecycleEventHandler(MethodEventObserver<CoherenceLifecycleEvent>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.data.core.mapping","c":"CoherenceMappingContext","l":"CoherenceMappingContext()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.metrics","c":"CoherenceMetricsAutoConfiguration","l":"CoherenceMetricsAutoConfiguration()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.data.core.mapping","c":"CoherencePersistentEntity","l":"CoherencePersistentEntity(TypeInformation<T>)","u":"%3Cinit%3E(org.springframework.data.util.TypeInformation)"},{"p":"com.oracle.coherence.spring.data.core.mapping","c":"CoherencePersistentProperty","l":"CoherencePersistentProperty(Property, PersistentEntity<?, CoherencePersistentProperty>, SimpleTypeHolder)","u":"%3Cinit%3E(org.springframework.data.mapping.model.Property,org.springframework.data.mapping.PersistentEntity,org.springframework.data.mapping.model.SimpleTypeHolder)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"CoherenceProperties()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.messaging","c":"CoherencePublisherAutoConfigurationScanRegistrar","l":"CoherencePublisherAutoConfigurationScanRegistrar()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherProxyFactoryBean","l":"CoherencePublisherProxyFactoryBean(Class<?>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherRegistrar","l":"CoherencePublisherRegistrar()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherScanRegistrar","l":"CoherencePublisherScanRegistrar()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceAutoConfiguration.CoherencePublisherScanRegistrarConfiguration","l":"CoherencePublisherScanRegistrarConfiguration()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"CoherenceQueryCreator","l":"CoherenceQueryCreator(PartTree, ParameterAccessor)","u":"%3Cinit%3E(org.springframework.data.repository.query.parser.PartTree,org.springframework.data.repository.query.ParameterAccessor)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.data","c":"CoherenceRepositoriesAutoConfiguration","l":"CoherenceRepositoriesAutoConfiguration()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.data","c":"CoherenceRepositoriesRegistrar","l":"CoherenceRepositoriesRegistrar()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.data.config","c":"CoherenceRepositoriesRegistrar","l":"CoherenceRepositoriesRegistrar()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryConfigurationExtension","l":"CoherenceRepositoryConfigurationExtension()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryFactory","l":"CoherenceRepositoryFactory(Coherence, CoherenceMappingContext, String, String)","u":"%3Cinit%3E(com.tangosol.net.Coherence,com.oracle.coherence.spring.data.core.mapping.CoherenceMappingContext,java.lang.String,java.lang.String)"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryFactoryBean","l":"CoherenceRepositoryFactoryBean(Class<? extends T>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"CoherenceRepositoryQuery","l":"CoherenceRepositoryQuery(NamedMap, Method, RepositoryMetadata, ProjectionFactory)","u":"%3Cinit%3E(com.tangosol.net.NamedMap,java.lang.reflect.Method,org.springframework.data.repository.core.RepositoryMetadata,org.springframework.data.projection.ProjectionFactory)"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"CoherenceServer(Coherence)","u":"%3Cinit%3E(com.tangosol.net.Coherence)"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"CoherenceServer(Coherence, Duration)","u":"%3Cinit%3E(com.tangosol.net.Coherence,java.time.Duration)"},{"p":"com.oracle.coherence.spring.session.events","c":"CoherenceSessionEventMapListener","l":"CoherenceSessionEventMapListener(ApplicationEventPublisher)","u":"%3Cinit%3E(org.springframework.context.ApplicationEventPublisher)"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"CoherenceSpringConfiguration(ConfigurableApplicationContext)","u":"%3Cinit%3E(org.springframework.context.ConfigurableApplicationContext)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.session","c":"CoherenceSpringSessionAutoConfiguration","l":"CoherenceSpringSessionAutoConfiguration()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.session","c":"CoherenceSpringSessionProperties","l":"CoherenceSpringSessionProperties()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.messaging.exceptions","c":"CoherenceSubscriberException","l":"CoherenceSubscriberException(String, Object, Subscriber<?>, Subscriber.Element<?>)","u":"%3Cinit%3E(java.lang.String,java.lang.Object,com.tangosol.net.topic.Subscriber,com.tangosol.net.topic.Subscriber.Element)"},{"p":"com.oracle.coherence.spring.messaging.exceptions","c":"CoherenceSubscriberException","l":"CoherenceSubscriberException(String, Throwable, Object, Subscriber<?>, Subscriber.Element<?>)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable,java.lang.Object,com.tangosol.net.topic.Subscriber,com.tangosol.net.topic.Subscriber.Element)"},{"p":"com.oracle.coherence.spring.messaging.exceptions","c":"CoherenceSubscriberException","l":"CoherenceSubscriberException(Throwable, Object, Subscriber<?>, Subscriber.Element<?>)","u":"%3Cinit%3E(java.lang.Throwable,java.lang.Object,com.tangosol.net.topic.Subscriber,com.tangosol.net.topic.Subscriber.Element)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherenceTopicListenerCandidates","l":"CoherenceTopicListenerCandidates(Map<String, List<Method>>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"coherenceTopicListenerPostProcessor()"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherenceTopicListenerPostProcessor","l":"CoherenceTopicListenerPostProcessor()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherenceTopicListenerSubscribers","l":"CoherenceTopicListenerSubscribers(FilterService, ExtractorService, CoherenceTopicListenerCandidates, Optional<ExecutorService>)","u":"%3Cinit%3E(com.oracle.coherence.spring.configuration.FilterService,com.oracle.coherence.spring.configuration.ExtractorService,com.oracle.coherence.spring.messaging.CoherenceTopicListenerCandidates,java.util.Optional)"},{"p":"com.oracle.coherence.spring.annotation","c":"CoherenceTopicListener","l":"commitStrategy()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CommonExtractorFactories","l":"CommonExtractorFactories()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CommonFilterFactories","l":"CommonFilterFactories()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"compareTo(SimpleMapListener<?, ?>)","u":"compareTo(com.oracle.coherence.spring.event.mapevent.SimpleMapListener)"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"CoherenceQueryCreator","l":"complete(QueryState, Sort)","u":"complete(com.oracle.coherence.spring.data.repository.query.QueryState,org.springframework.data.domain.Sort)"},{"p":"com.oracle.coherence.spring.data.support","c":"Utils","l":"configureLimitFilter(Pageable, Filter)","u":"configureLimitFilter(org.springframework.data.domain.Pageable,com.tangosol.util.Filter)"},{"p":"com.oracle.coherence.spring.data.config","c":"EnableCoherenceRepositories","l":"considerNestedRepositories()"},{"p":"com.oracle.coherence.spring.messaging","c":"SubscriberExceptionHandler.Action","l":"Continue"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceGenericConverter","l":"convert(Object, TypeDescriptor, TypeDescriptor)","u":"convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)"},{"p":"com.oracle.coherence.spring.messaging","c":"Publishers","l":"convertPublisher(Object, Class<T>)","u":"convertPublisher(java.lang.Object,java.lang.Class)"},{"p":"com.oracle.coherence.spring.data.repository","c":"AsyncCrudRepository","l":"count()"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"count()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"count()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"count()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"count(Filter<?>)","u":"count(com.tangosol.util.Filter)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"count(Filter<?>)","u":"count(com.tangosol.util.Filter)"},{"p":"com.oracle.coherence.spring.annotation","c":"ExtractorFactory","l":"create(A)"},{"p":"com.oracle.coherence.spring.annotation","c":"FilterFactory","l":"create(A)"},{"p":"com.oracle.coherence.spring.annotation","c":"MapEventTransformerFactory","l":"create(A)"},{"p":"com.oracle.coherence.spring.event.liveevent","c":"EventHandlerFactory","l":"create(Class<E>, String, Method, ApplicationContext)","u":"create(java.lang.Class,java.lang.String,java.lang.reflect.Method,org.springframework.context.ApplicationContext)"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"CoherenceQueryCreator","l":"create(Part, Iterator<Object>)","u":"create(org.springframework.data.repository.query.parser.Part,java.util.Iterator)"},{"p":"com.oracle.coherence.spring.data.core.mapping","c":"CoherencePersistentProperty","l":"createAssociation()"},{"p":"com.oracle.coherence.spring.configuration","c":"DefaultCoherenceConfigurer","l":"createCoherence(Set<SessionType>)","u":"createCoherence(java.util.Set)"},{"p":"com.oracle.coherence.spring.configuration","c":"DefaultCoherenceConfigurer","l":"createCoherenceConfiguration()"},{"p":"com.oracle.coherence.spring.configuration","c":"DefaultCoherenceConfigurer","l":"createCoherenceServer()"},{"p":"com.oracle.coherence.spring.session.support","c":"SessionEvent","l":"CREATED"},{"p":"com.oracle.coherence.spring.event.liveevent","c":"EventHandlerFactory","l":"createEventHandler(Class<E>, MethodEventObserver<E>)","u":"createEventHandler(java.lang.Class,com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.event.liveevent","c":"EventObserverSupport","l":"createObserver(Class<E>, MethodEventObserver<E>)","u":"createObserver(java.lang.Class,com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.data.core.mapping","c":"CoherenceMappingContext","l":"createPersistentEntity(TypeInformation<T>)","u":"createPersistentEntity(org.springframework.data.util.TypeInformation)"},{"p":"com.oracle.coherence.spring.data.core.mapping","c":"CoherenceMappingContext","l":"createPersistentProperty(Property, CoherencePersistentEntity<?>, SimpleTypeHolder)","u":"createPersistentProperty(org.springframework.data.mapping.model.Property,com.oracle.coherence.spring.data.core.mapping.CoherencePersistentEntity,org.springframework.data.mapping.model.SimpleTypeHolder)"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryFactoryBean","l":"createRepositoryFactory()"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"createSession()"},{"p":"com.oracle.coherence.spring.session.support","c":"SessionDebugMessageUtils","l":"createSessionEventMessage(SessionEvent, MapSession)","u":"createSessionEventMessage(com.oracle.coherence.spring.session.support.SessionEvent,org.springframework.session.MapSession)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherenceTopicListenerSubscribers","l":"createSubscribers(Coherence)","u":"createSubscribers(com.tangosol.net.Coherence)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.session","c":"CoherenceSpringSessionAutoConfiguration.SpringBootCoherenceHttpSessionConfiguration","l":"customize(SessionProperties, CoherenceSpringSessionProperties, ServerProperties)","u":"customize(org.springframework.boot.autoconfigure.session.SessionProperties,com.oracle.coherence.spring.boot.autoconfigure.session.CoherenceSpringSessionProperties,org.springframework.boot.autoconfigure.web.ServerProperties)"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceConfigurerCustomizer","l":"customize(T)"},{"p":"com.oracle.coherence.spring","c":"CoherenceBeanExpressionResolver","l":"customizeEvaluationContext(StandardEvaluationContext)","u":"customizeEvaluationContext(org.springframework.expression.spel.support.StandardEvaluationContext)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"DEFAULT_PROFILE"},{"p":"com.oracle.coherence.spring.configuration.support","c":"SpringSystemPropertyResolver","l":"DEFAULT_PROPERTY_PREFIX"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"DEFAULT_SESSION_MAP_NAME"},{"p":"com.oracle.coherence.spring.configuration.session","c":"AbstractSessionConfigurationBean","l":"DEFAULT_SESSION_NAME"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"DEFAULT_STARTUP_TIMEOUT_MILLIS"},{"p":"com.oracle.coherence.spring.configuration","c":"DefaultCoherenceConfigurer","l":"DefaultCoherenceConfigurer(ConfigurableApplicationContext, CoherenceEventListenerCandidates)","u":"%3Cinit%3E(org.springframework.context.ConfigurableApplicationContext,com.oracle.coherence.spring.event.CoherenceEventListenerCandidates)"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"defaultSerializer()"},{"p":"com.oracle.coherence.spring.data.repository","c":"AsyncCrudRepository","l":"delete(T)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"delete(T)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"delete(T)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"delete(T)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"delete(T)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"delete(T, boolean)","u":"delete(T,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"delete(T, boolean)","u":"delete(T,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"delete(T, boolean)","u":"delete(T,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"delete(T, boolean)","u":"delete(T,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"AsyncCrudRepository","l":"deleteAll()"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"deleteAll()"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"deleteAll()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteAll()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"deleteAll()"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"deleteAll(Collection<? extends T>)","u":"deleteAll(java.util.Collection)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"deleteAll(Collection<? extends T>)","u":"deleteAll(java.util.Collection)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteAll(Collection<? extends T>)","u":"deleteAll(java.util.Collection)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"deleteAll(Collection<? extends T>)","u":"deleteAll(java.util.Collection)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"deleteAll(Collection<? extends T>, boolean)","u":"deleteAll(java.util.Collection,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"deleteAll(Collection<? extends T>, boolean)","u":"deleteAll(java.util.Collection,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteAll(Collection<? extends T>, boolean)","u":"deleteAll(java.util.Collection,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"deleteAll(Collection<? extends T>, boolean)","u":"deleteAll(java.util.Collection,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"deleteAll(Filter<?>)","u":"deleteAll(com.tangosol.util.Filter)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"deleteAll(Filter<?>)","u":"deleteAll(com.tangosol.util.Filter)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteAll(Filter<?>)","u":"deleteAll(com.tangosol.util.Filter)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"deleteAll(Filter<?>)","u":"deleteAll(com.tangosol.util.Filter)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"deleteAll(Filter<?>, boolean)","u":"deleteAll(com.tangosol.util.Filter,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"deleteAll(Filter<?>, boolean)","u":"deleteAll(com.tangosol.util.Filter,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteAll(Filter<?>, boolean)","u":"deleteAll(com.tangosol.util.Filter,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"deleteAll(Filter<?>, boolean)","u":"deleteAll(com.tangosol.util.Filter,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"AsyncCrudRepository","l":"deleteAll(Iterable<? extends T>)","u":"deleteAll(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"deleteAll(Iterable<? extends T>)","u":"deleteAll(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"deleteAll(Iterable<? extends T>)","u":"deleteAll(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteAll(Iterable<? extends T>)","u":"deleteAll(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"deleteAll(Iterable<? extends T>)","u":"deleteAll(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"deleteAll(Stream<? extends T>)","u":"deleteAll(java.util.stream.Stream)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"deleteAll(Stream<? extends T>)","u":"deleteAll(java.util.stream.Stream)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteAll(Stream<? extends T>)","u":"deleteAll(java.util.stream.Stream)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"deleteAll(Stream<? extends T>)","u":"deleteAll(java.util.stream.Stream)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"deleteAll(Stream<? extends T>, boolean)","u":"deleteAll(java.util.stream.Stream,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"deleteAll(Stream<? extends T>, boolean)","u":"deleteAll(java.util.stream.Stream,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteAll(Stream<? extends T>, boolean)","u":"deleteAll(java.util.stream.Stream,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"deleteAll(Stream<? extends T>, boolean)","u":"deleteAll(java.util.stream.Stream,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"deleteAllById(Collection<? extends ID>)","u":"deleteAllById(java.util.Collection)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"deleteAllById(Collection<? extends ID>)","u":"deleteAllById(java.util.Collection)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteAllById(Collection<? extends ID>)","u":"deleteAllById(java.util.Collection)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"deleteAllById(Collection<? extends ID>)","u":"deleteAllById(java.util.Collection)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"deleteAllById(Collection<? extends ID>, boolean)","u":"deleteAllById(java.util.Collection,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"deleteAllById(Collection<? extends ID>, boolean)","u":"deleteAllById(java.util.Collection,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteAllById(Collection<? extends ID>, boolean)","u":"deleteAllById(java.util.Collection,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"deleteAllById(Collection<? extends ID>, boolean)","u":"deleteAllById(java.util.Collection,boolean)"},{"p":"com.oracle.coherence.spring.data.repository","c":"AsyncCrudRepository","l":"deleteAllById(Iterable<? extends ID>)","u":"deleteAllById(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"deleteAllById(Iterable<? extends ID>)","u":"deleteAllById(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"deleteAllById(Iterable<? extends ID>)","u":"deleteAllById(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteAllById(Iterable<? extends ID>)","u":"deleteAllById(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"deleteAllById(Iterable<? extends ID>)","u":"deleteAllById(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"AsyncCrudRepository","l":"deleteById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"deleteById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"deleteById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"deleteById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"deleteById(ID, boolean)","u":"deleteById(ID,boolean)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"deleteById(String)","u":"deleteById(java.lang.String)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"MapEventType","l":"DELETED"},{"p":"com.oracle.coherence.spring.session.support","c":"SessionEvent","l":"DELETED"},{"p":"com.oracle.coherence.spring.session.serialization.pof","c":"AuthenticationPofSerializer","l":"deserialize(PofReader)","u":"deserialize(com.tangosol.io.pof.PofReader)"},{"p":"com.oracle.coherence.spring.session.serialization.pof","c":"GrantedAuthorityPofSerializer","l":"deserialize(PofReader)","u":"deserialize(com.tangosol.io.pof.PofReader)"},{"p":"com.oracle.coherence.spring.session.serialization.pof","c":"MapSessionPofSerializer","l":"deserialize(PofReader)","u":"deserialize(com.tangosol.io.pof.PofReader)"},{"p":"com.oracle.coherence.spring.session.serialization.pof","c":"SecurityContextPofSerializer","l":"deserialize(PofReader)","u":"deserialize(com.tangosol.io.pof.PofReader)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherProxyFactoryBean","l":"destroy()"},{"p":"com.oracle.coherence.spring","c":"SpringBasedCoherenceSession","l":"destroy()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"distinct(Filter<?>, ValueExtractor<? super T, ? extends R>)","u":"distinct(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"distinct(Filter<?>, ValueExtractor<? super T, ? extends R>)","u":"distinct(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"distinct(ValueExtractor<? super T, ? extends R>)","u":"distinct(com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"distinct(ValueExtractor<? super T, ? extends R>)","u":"distinct(com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.configuration","c":"EnableCoherenceImportBeanDefinitionRegistrar","l":"EnableCoherenceImportBeanDefinitionRegistrar(Environment, BeanFactory)","u":"%3Cinit%3E(org.springframework.core.env.Environment,org.springframework.beans.factory.BeanFactory)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanBuilder","l":"ensureBeanFactory(ParameterResolver, ClassLoader)","u":"ensureBeanFactory(com.tangosol.config.expression.ParameterResolver,java.lang.ClassLoader)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"entryDeleted(MapEvent<K, V>)","u":"entryDeleted(com.tangosol.util.MapEvent)"},{"p":"com.oracle.coherence.spring.session.events","c":"CoherenceSessionEventMapListener","l":"entryDeleted(MapEvent<String, MapSession>)","u":"entryDeleted(com.tangosol.util.MapEvent)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"EntryEventHandler","l":"EntryEventHandler(MethodEventObserver<EntryEvent<K, V>>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"entryInserted(MapEvent<K, V>)","u":"entryInserted(com.tangosol.util.MapEvent)"},{"p":"com.oracle.coherence.spring.session.events","c":"CoherenceSessionEventMapListener","l":"entryInserted(MapEvent<String, MapSession>)","u":"entryInserted(com.tangosol.util.MapEvent)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"EntryProcessorEventHandler","l":"EntryProcessorEventHandler(MethodEventObserver<EntryProcessorEvent>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"entryUpdated(MapEvent<K, V>)","u":"entryUpdated(com.tangosol.util.MapEvent)"},{"p":"com.oracle.coherence.spring.session.events","c":"CoherenceSessionEventMapListener","l":"entryUpdated(MapEvent<String, MapSession>)","u":"entryUpdated(com.tangosol.util.MapEvent)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataResource","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.oracle.coherence.spring.cachestore","c":"JpaRepositoryCacheStore","l":"erase(ID)"},{"p":"com.oracle.coherence.spring.cachestore","c":"JpaRepositoryCacheStore","l":"eraseAll(Collection<? extends ID>)","u":"eraseAll(java.util.Collection)"},{"p":"com.oracle.coherence.spring.event.liveevent","c":"EventHandlerFactory","l":"EventHandlerFactory()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.event.liveevent","c":"EventObserverSupport","l":"EventObserverSupport()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"EventHandler","l":"eventTypes"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCache","l":"evict(Object)","u":"evict(java.lang.Object)"},{"p":"com.oracle.coherence.spring.annotation.event","c":"Backlog.Type","l":"EXCESSIVE"},{"p":"com.oracle.coherence.spring.annotation","c":"CoherencePublisherScan","l":"excludeFilters()"},{"p":"com.oracle.coherence.spring.data.config","c":"EnableCoherenceRepositories","l":"excludeFilters()"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"CoherenceRepositoryQuery","l":"execute(Object[])","u":"execute(java.lang.Object[])"},{"p":"com.oracle.coherence.spring.data.repository","c":"AsyncCrudRepository","l":"existsById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"existsById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"existsById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"existsById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"existsById(ID)"},{"p":"com.oracle.coherence.spring.session.support","c":"SessionEvent","l":"EXPIRED"},{"p":"com.oracle.coherence.spring.session.support","c":"PrincipalNameExtractor","l":"extract(MapSession)","u":"extract(org.springframework.session.MapSession)"},{"p":"com.oracle.coherence.spring.configuration","c":"MapEventTransformerService","l":"extractorFactory"},{"p":"com.oracle.coherence.spring.configuration","c":"MapEventTransformerConfiguration","l":"extractorService"},{"p":"com.oracle.coherence.spring.configuration","c":"ExtractorService","l":"ExtractorService(ConfigurableApplicationContext)","u":"%3Cinit%3E(org.springframework.context.ConfigurableApplicationContext)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"FederatedChangeEventHandler","l":"FederatedChangeEventHandler(MethodEventObserver<FederatedChangeEvent>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"FederatedConnectionEventHandler","l":"FederatedConnectionEventHandler(MethodEventObserver<FederatedConnectionEvent>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"FederatedPartitionEventHandler","l":"FederatedPartitionEventHandler(MethodEventObserver<FederatedPartitionEvent>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"FederationEventHandler","l":"FederationEventHandler(MethodEventObserver<E>, Class<T>, Function<E, String>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver,java.lang.Class,java.util.function.Function)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.support","c":"LogType","l":"FILENAME"},{"p":"com.oracle.coherence.spring.configuration","c":"FilterService","l":"FilterService(ConfigurableApplicationContext)","u":"%3Cinit%3E(org.springframework.context.ConfigurableApplicationContext)"},{"p":"com.oracle.coherence.spring.data.repository","c":"AsyncCrudRepository","l":"findAll()"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"findAll()"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"findAll()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"findAll()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"findAll()"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"findAll(Pageable)","u":"findAll(org.springframework.data.domain.Pageable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"findAll(Pageable)","u":"findAll(org.springframework.data.domain.Pageable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"findAll(Sort)","u":"findAll(org.springframework.data.domain.Sort)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"findAll(Sort)","u":"findAll(org.springframework.data.domain.Sort)"},{"p":"com.oracle.coherence.spring.data.repository","c":"AsyncCrudRepository","l":"findAllById(Iterable<ID>)","u":"findAllById(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"findAllById(Iterable<ID>)","u":"findAllById(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"findAllById(Iterable<ID>)","u":"findAllById(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"findAllById(Iterable<ID>)","u":"findAllById(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"findAllById(Iterable<ID>)","u":"findAllById(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"AsyncCrudRepository","l":"findById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"findById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"findById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"findById(ID)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"findById(ID)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"findById(String)","u":"findById(java.lang.String)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"findByIndexNameAndIndexValue(String, String)","u":"findByIndexNameAndIndexValue(java.lang.String,java.lang.String)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"EnableCoherenceHttpSession","l":"flushMode()"},{"p":"com.oracle.coherence.spring.messaging","c":"Publishers","l":"fromCompletableFuture(Supplier<CompletableFuture<T>>)","u":"fromCompletableFuture(java.util.function.Supplier)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"get(ID, ValueExtractor<? super T, ? extends R>)","u":"get(ID,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"get(ID, ValueExtractor<? super T, ? extends R>)","u":"get(ID,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCache","l":"get(Object)","u":"get(java.lang.Object)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCache","l":"get(Object, Callable<T>)","u":"get(java.lang.Object,java.util.concurrent.Callable)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCache","l":"get(Object, Class<T>)","u":"get(java.lang.Object,java.lang.Class)"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"QueryResult","l":"getAggregator()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAll(Collection<? extends ID>, Consumer<? super T>)","u":"getAll(java.util.Collection,java.util.function.Consumer)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAll(Collection<? extends ID>, ValueExtractor<? super T, ? extends R>)","u":"getAll(java.util.Collection,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"getAll(Collection<? extends ID>, ValueExtractor<? super T, ? extends R>)","u":"getAll(java.util.Collection,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAll(Collection<? extends ID>, ValueExtractor<? super T, ? extends R>, BiConsumer<? super ID, ? super R>)","u":"getAll(java.util.Collection,com.tangosol.util.ValueExtractor,java.util.function.BiConsumer)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAll(Consumer<? super T>)","u":"getAll(java.util.function.Consumer)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAll(Filter<?>)","u":"getAll(com.tangosol.util.Filter)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"getAll(Filter<?>)","u":"getAll(com.tangosol.util.Filter)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAll(Filter<?>, Consumer<? super T>)","u":"getAll(com.tangosol.util.Filter,java.util.function.Consumer)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAll(Filter<?>, ValueExtractor<? super T, ? extends R>)","u":"getAll(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"getAll(Filter<?>, ValueExtractor<? super T, ? extends R>)","u":"getAll(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAll(Filter<?>, ValueExtractor<? super T, ? extends R>, BiConsumer<? super ID, ? super R>)","u":"getAll(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,java.util.function.BiConsumer)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAll(ValueExtractor<? super T, ? extends R>)","u":"getAll(com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"getAll(ValueExtractor<? super T, ? extends R>)","u":"getAll(com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAll(ValueExtractor<? super T, ? extends R>, BiConsumer<? super ID, ? super R>)","u":"getAll(com.tangosol.util.ValueExtractor,java.util.function.BiConsumer)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAllOrderedBy(Filter<?>, Remote.Comparator<? super T>)","u":"getAllOrderedBy(com.tangosol.util.Filter,com.tangosol.util.function.Remote.Comparator)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"getAllOrderedBy(Filter<?>, Remote.Comparator<? super T>)","u":"getAllOrderedBy(com.tangosol.util.Filter,com.tangosol.util.function.Remote.Comparator)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAllOrderedBy(Filter<?>, ValueExtractor<? super T, ? extends R>)","u":"getAllOrderedBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"getAllOrderedBy(Filter<?>, ValueExtractor<? super T, ? extends R>)","u":"getAllOrderedBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAllOrderedBy(Remote.Comparator<? super T>)","u":"getAllOrderedBy(com.tangosol.util.function.Remote.Comparator)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"getAllOrderedBy(Remote.Comparator<? super T>)","u":"getAllOrderedBy(com.tangosol.util.function.Remote.Comparator)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getAllOrderedBy(ValueExtractor<? super T, ? extends R>)","u":"getAllOrderedBy(com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"getAllOrderedBy(ValueExtractor<? super T, ? extends R>)","u":"getAllOrderedBy(com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.SessionProperties","l":"getAllSessionConfigurationBeans()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.data","c":"CoherenceRepositoriesRegistrar","l":"getAnnotation()"},{"p":"com.oracle.coherence.spring.data.config","c":"CoherenceRepositoriesRegistrar","l":"getAnnotation()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceAnnotationUtils","l":"getAnnotationsMarkedWithMarkerAnnotation(InjectionPoint, Class)","u":"getAnnotationsMarkedWithMarkerAnnotation(org.springframework.beans.factory.InjectionPoint,java.lang.Class)"},{"p":"com.oracle.coherence.spring","c":"CoherenceContext","l":"getApplicationContext()"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"getApplicationContext()"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanFactoryBuilder","l":"getApplicationContextUri()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"getApplicationName()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.messaging","c":"CoherencePublisherAutoConfigurationScanRegistrar","l":"getBasePackages(AnnotationMetadata, BeanDefinitionRegistry)","u":"getBasePackages(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherScanRegistrar","l":"getBasePackages(AnnotationMetadata, BeanDefinitionRegistry)","u":"getBasePackages(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanBuilder","l":"getBeanName()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceAnnotationUtils","l":"getBeansOfTypeWithAnnotation(ConfigurableApplicationContext, Class<? extends T>, Class<? extends Annotation>)","u":"getBeansOfTypeWithAnnotation(org.springframework.context.ConfigurableApplicationContext,java.lang.Class,java.lang.Class)"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceAnnotationUtils","l":"getBeanTypeForBeanName(BeanFactory, String)","u":"getBeanTypeForBeanName(org.springframework.beans.factory.BeanFactory,java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.data","c":"CoherenceRepositoriesRegistrar","l":"getBootstrapMode()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"getCache()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheManager","l":"getCache(String)","u":"getCache(java.lang.String)"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"getCache(String)","u":"getCache(java.lang.String)"},{"p":"com.oracle.coherence.spring","c":"SpringBasedCoherenceSession","l":"getCache(String)","u":"getCache(java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"getCacheConfig()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCache","l":"getCacheConfiguration()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"getCacheName(String)","u":"getCacheName(java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"getCacheNamePrefix()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"getCacheNamePrefix()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheManager","l":"getCacheNames()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.LoggingProperties","l":"getCharacterLimit()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.SessionProperties","l":"getClient()"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"getCoherence()"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceConfigurer","l":"getCoherence()"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"getCoherence()"},{"p":"com.oracle.coherence.spring.configuration","c":"DefaultCoherenceConfigurer","l":"getCoherence()"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"getCoherenceCluster()"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceConfigurer","l":"getCoherenceConfiguration()"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"getCoherenceConfiguration()"},{"p":"com.oracle.coherence.spring.configuration","c":"DefaultCoherenceConfigurer","l":"getCoherenceConfiguration()"},{"p":"com.oracle.coherence.spring.event","c":"CoherenceEventListenerCandidates","l":"getCoherenceEventListenerCandidateMethods()"},{"p":"com.oracle.coherence.spring.configuration","c":"DefaultCoherenceConfigurer","l":"getCoherenceInstanceType()"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceConfigurer","l":"getCoherenceServer()"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"getCoherenceServer()"},{"p":"com.oracle.coherence.spring.configuration","c":"DefaultCoherenceConfigurer","l":"getCoherenceServer()"},{"p":"com.oracle.coherence.spring.configuration","c":"DefaultCoherenceConfigurer","l":"getCoherenceServerStartupTimeout()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceGrpcClient","l":"getCoherenceSession()"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherenceTopicListenerCandidates","l":"getCoherenceTopicListenerCandidateMethods()"},{"p":"com.oracle.coherence.spring.configuration.session","c":"SessionConfigurationBean","l":"getConfig()"},{"p":"com.oracle.coherence.spring","c":"SpringBasedCoherenceSession","l":"getConfigurableCacheFactory()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.data","c":"CoherenceRepositoriesRegistrar","l":"getConfiguration()"},{"p":"com.oracle.coherence.spring.configuration.session","c":"SessionConfigurationBean","l":"getConfiguration()"},{"p":"com.oracle.coherence.spring.configuration.session","c":"SessionConfigurationProvider","l":"getConfiguration()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceGenericConverter","l":"getConvertibleTypes()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.LoggingProperties","l":"getDestination()"},{"p":"com.oracle.coherence.spring.messaging.exceptions","c":"CoherenceSubscriberException","l":"getElement()"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryFactory","l":"getEntityInformation(Class<T>)","u":"getEntityInformation(java.lang.Class)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"getEntityType()"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"getEntityType()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"SpringSystemPropertyResolver","l":"getEnv(String)","u":"getEnv(java.lang.String)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"EventHandler","l":"getEventTypes()"},{"p":"com.oracle.coherence.spring.data.config","c":"CoherenceRepositoriesRegistrar","l":"getExtension()"},{"p":"com.oracle.coherence.spring.configuration","c":"ExtractorConfiguration","l":"getExtractor(InjectionPoint)","u":"getExtractor(org.springframework.beans.factory.InjectionPoint)"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CommonExtractorFactories","l":"getExtractorFactories()"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanBuilder","l":"getFactoryName()"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanFactoryBuilder","l":"getFactoryName()"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler","l":"getFactoryNameAsString(Class<?>, Expression<String>, ParameterResolver)","u":"getFactoryNameAsString(java.lang.Class,com.tangosol.config.expression.Expression,com.tangosol.config.expression.ParameterResolver)"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"QueryResult","l":"getFilter()"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"getFilter()"},{"p":"com.oracle.coherence.spring.configuration","c":"FilterService","l":"getFilter(InjectionPoint)","u":"getFilter(org.springframework.beans.factory.InjectionPoint)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"AnnotatedMapListener","l":"getFilterAnnotations()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CommonFilterFactories","l":"getFilterFactories()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.session","c":"CoherenceSpringSessionProperties","l":"getFlushMode()"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"getFlushMode()"},{"p":"com.oracle.coherence.spring.event","c":"BaseMethodObserver","l":"getId()"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"EventHandler","l":"getId()"},{"p":"com.oracle.coherence.spring.cachestore","c":"JpaRepositoryCacheLoader","l":"getId(T)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"getId(T)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"getId(T)"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryConfigurationExtension","l":"getIdentifyingTypes()"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"getIndexResolver()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"getInstance()"},{"p":"com.oracle.coherence.spring.event","c":"CoherenceEventListenerCandidates","l":"getInterceptors()"},{"p":"com.oracle.coherence.spring.messaging.exceptions","c":"CoherenceSubscriberException","l":"getKafkaConsumer()"},{"p":"com.oracle.coherence.spring.messaging.exceptions","c":"CoherenceSubscriberException","l":"getKafkaListener()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.support","c":"LogType","l":"getKey()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"getLockTimeout()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"getLockTimeout()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.LoggingProperties","l":"getLoggerName()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"getLogging()"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"getMap()"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"getMap()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"getMap()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"getMap()"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"MapListenerRegistrationBean","l":"getMapListeners(String, String)","u":"getMapListeners(java.lang.String,java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.session","c":"CoherenceSpringSessionProperties","l":"getMapName()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.LoggingProperties","l":"getMessageFormat()"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryConfigurationExtension","l":"getModuleName()"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryConfigurationExtension","l":"getModulePrefix()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCache","l":"getName()"},{"p":"com.oracle.coherence.spring.configuration.session","c":"AbstractSessionConfigurationBean","l":"getName()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCache","l":"getNativeCache()"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherProxyFactoryBean","l":"getObject()"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherProxyFactoryBean","l":"getObjectType()"},{"p":"com.oracle.coherence.spring.event","c":"BaseMethodObserver","l":"getObservedQualifiers()"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"getObserver()"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanBuilder","l":"getParameterList()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataLocationResolver","l":"getPrefix()"},{"p":"com.oracle.coherence.spring.configuration.session","c":"AbstractSessionConfigurationBean","l":"getPriority()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"getProfile()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataResource","l":"getProfiles()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataResource","l":"getProfilesAsList()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"getProperties()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataResource","l":"getProperties()"},{"p":"com.oracle.coherence.spring.tracing","c":"SpringPropertySource","l":"getProperties()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"SpringSystemPropertyResolver","l":"getProperty(String)","u":"getProperty(java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"getPropertyPrefix()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataLoader","l":"getPropertySources(CoherenceConfigDataResource)","u":"getPropertySources(com.oracle.coherence.spring.boot.config.CoherenceConfigDataResource)"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryFactory","l":"getQueryLookupStrategy(QueryLookupStrategy.Key, QueryMethodEvaluationContextProvider)","u":"getQueryLookupStrategy(org.springframework.data.repository.query.QueryLookupStrategy.Key,org.springframework.data.repository.query.QueryMethodEvaluationContextProvider)"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"CoherenceRepositoryQuery","l":"getQueryMethod()"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryFactory","l":"getRepositoryBaseClass(RepositoryMetadata)","u":"getRepositoryBaseClass(org.springframework.data.repository.core.RepositoryMetadata)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.data","c":"CoherenceRepositoriesRegistrar","l":"getRepositoryConfigurationExtension()"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryConfigurationExtension","l":"getRepositoryFactoryBeanClassName()"},{"p":"com.oracle.coherence.spring","c":"CoherenceBeanExpressionResolver","l":"getResolver()"},{"p":"com.oracle.coherence.spring","c":"SpringBasedCoherenceSession","l":"getResourceRegistry()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.session","c":"CoherenceSpringSessionProperties","l":"getSaveMode()"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"getSaveMode()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"getScopeName()"},{"p":"com.oracle.coherence.spring.configuration.session","c":"AbstractSessionConfigurationBean","l":"getScopeName()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"getServer()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.SessionProperties","l":"getServer()"},{"p":"com.oracle.coherence.spring","c":"SpringBasedCoherenceSession","l":"getService(String)","u":"getService(java.lang.String)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"getSession()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"getSessionName()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"getSessions()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.LoggingProperties","l":"getSeverityLevel()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceAnnotationUtils","l":"getSingleAnnotationMarkedWithMarkerAnnotation(InjectionPoint, Class)","u":"getSingleAnnotationMarkedWithMarkerAnnotation(org.springframework.beans.factory.InjectionPoint,java.lang.Class)"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceAnnotationUtils","l":"getSingleBeanWithAnnotation(ApplicationContext, Class<? extends Annotation>)","u":"getSingleBeanWithAnnotation(org.springframework.context.ApplicationContext,java.lang.Class)"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"QueryResult","l":"getSort()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.ServerProperties","l":"getStartupTimeout()"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"getStartupTimeout()"},{"p":"com.oracle.coherence.spring.event","c":"BaseMethodObserver","l":"getTargetBean()"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryFactory","l":"getTargetRepository(RepositoryInformation)","u":"getTargetRepository(org.springframework.data.repository.core.RepositoryInformation)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"getTimeToLive()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"getTimeToLive()"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"getTransformer()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.InstanceProperties","l":"getType()"},{"p":"com.oracle.coherence.spring.configuration.session","c":"AbstractSessionConfigurationBean","l":"getType()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.session","c":"CoherenceSpringSessionProperties","l":"getUseEntryProcessor()"},{"p":"com.oracle.coherence.spring.session.serialization.pof","c":"GrantedAuthorityPofSerializer","l":"GrantedAuthorityPofSerializer()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"groupBy(Filter<?>, ValueExtractor<? super T, ? extends K>)","u":"groupBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"groupBy(Filter<?>, ValueExtractor<? super T, ? extends K>)","u":"groupBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"groupBy(Filter<?>, ValueExtractor<? super T, ? extends K>, Remote.Comparator<? super T>)","u":"groupBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,com.tangosol.util.function.Remote.Comparator)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"groupBy(Filter<?>, ValueExtractor<? super T, ? extends K>, Remote.Comparator<? super T>)","u":"groupBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,com.tangosol.util.function.Remote.Comparator)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"groupBy(Filter<?>, ValueExtractor<? super T, ? extends K>, Remote.Supplier<M>, RemoteCollector<? super T, A, R>)","u":"groupBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,com.tangosol.util.function.Remote.Supplier,com.tangosol.util.stream.RemoteCollector)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"groupBy(Filter<?>, ValueExtractor<? super T, ? extends K>, Remote.Supplier<M>, RemoteCollector<? super T, A, R>)","u":"groupBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,com.tangosol.util.function.Remote.Supplier,com.tangosol.util.stream.RemoteCollector)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"groupBy(Filter<?>, ValueExtractor<? super T, ? extends K>, RemoteCollector<? super T, A, R>)","u":"groupBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,com.tangosol.util.stream.RemoteCollector)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"groupBy(Filter<?>, ValueExtractor<? super T, ? extends K>, RemoteCollector<? super T, A, R>)","u":"groupBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,com.tangosol.util.stream.RemoteCollector)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"groupBy(ValueExtractor<? super T, ? extends K>)","u":"groupBy(com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"groupBy(ValueExtractor<? super T, ? extends K>)","u":"groupBy(com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"groupBy(ValueExtractor<? super T, ? extends K>, Remote.Comparator<? super T>)","u":"groupBy(com.tangosol.util.ValueExtractor,com.tangosol.util.function.Remote.Comparator)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"groupBy(ValueExtractor<? super T, ? extends K>, Remote.Comparator<? super T>)","u":"groupBy(com.tangosol.util.ValueExtractor,com.tangosol.util.function.Remote.Comparator)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"groupBy(ValueExtractor<? super T, ? extends K>, Remote.Supplier<M>, RemoteCollector<? super T, A, R>)","u":"groupBy(com.tangosol.util.ValueExtractor,com.tangosol.util.function.Remote.Supplier,com.tangosol.util.stream.RemoteCollector)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"groupBy(ValueExtractor<? super T, ? extends K>, Remote.Supplier<M>, RemoteCollector<? super T, A, R>)","u":"groupBy(com.tangosol.util.ValueExtractor,com.tangosol.util.function.Remote.Supplier,com.tangosol.util.stream.RemoteCollector)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"groupBy(ValueExtractor<? super T, ? extends K>, RemoteCollector<? super T, A, R>)","u":"groupBy(com.tangosol.util.ValueExtractor,com.tangosol.util.stream.RemoteCollector)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"groupBy(ValueExtractor<? super T, ? extends K>, RemoteCollector<? super T, A, R>)","u":"groupBy(com.tangosol.util.ValueExtractor,com.tangosol.util.stream.RemoteCollector)"},{"p":"com.oracle.coherence.spring.messaging","c":"SubscriberExceptionHandler","l":"handle(CoherenceSubscriberException)","u":"handle(com.oracle.coherence.spring.messaging.exceptions.CoherenceSubscriberException)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataResource","l":"hashCode()"},{"p":"com.oracle.coherence.spring.annotation","c":"CoherencePublisherScan","l":"includeFilters()"},{"p":"com.oracle.coherence.spring.data.config","c":"EnableCoherenceRepositories","l":"includeFilters()"},{"p":"com.oracle.coherence.spring.annotation","c":"PofExtractor","l":"index()"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"init()"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"initialize()"},{"p":"com.oracle.coherence.spring.configuration","c":"DefaultCoherenceConfigurer","l":"initialize()"},{"p":"com.oracle.coherence.spring","c":"CoherenceInjector","l":"inject(Object)","u":"inject(java.lang.Object)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"MapEventType","l":"INSERTED"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.InstanceProperties","l":"InstanceProperties()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"EventHandler","l":"introduceEventDispatcher(String, EventDispatcher)","u":"introduceEventDispatcher(java.lang.String,com.tangosol.net.events.EventDispatcher)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherProxyFactoryBean","l":"invoke(MethodInvocation)","u":"invoke(org.aopalliance.intercept.MethodInvocation)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"CoherenceLifecycleEventHandler","l":"isApplicable(EventDispatcher, String)","u":"isApplicable(com.tangosol.net.events.EventDispatcher,java.lang.String)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"FederationEventHandler","l":"isApplicable(EventDispatcher, String)","u":"isApplicable(com.tangosol.net.events.EventDispatcher,java.lang.String)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"ServiceEventHandler","l":"isApplicable(EventDispatcher, String)","u":"isApplicable(com.tangosol.net.events.EventDispatcher,java.lang.String)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"SessionLifecycleEventHandler","l":"isApplicable(EventDispatcher, String)","u":"isApplicable(com.tangosol.net.events.EventDispatcher,java.lang.String)"},{"p":"com.oracle.coherence.spring.event","c":"BaseMethodObserver","l":"isAsync()"},{"p":"com.oracle.coherence.spring.messaging","c":"Publishers","l":"isConvertibleToPublisher(Class<?>)","u":"isConvertibleToPublisher(java.lang.Class)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"isEnabled()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"isFailFast()"},{"p":"com.oracle.coherence.spring.data.core.mapping","c":"CoherencePersistentProperty","l":"isIdProperty()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"isLockEntireCache()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"isLockEntireCache()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataLocationResolver","l":"isResolvable(ConfigDataLocationResolverContext, ConfigDataLocation)","u":"isResolvable(org.springframework.boot.context.config.ConfigDataLocationResolverContext,org.springframework.boot.context.config.ConfigDataLocation)"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"isRunning()"},{"p":"com.oracle.coherence.spring.messaging","c":"Publishers","l":"isSingle(Class<?>)","u":"isSingle(java.lang.Class)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherenceTopicListenerSubscribers","l":"isSubscribed()"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"isSynchronous()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"isUseCacheNamePrefix()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"isUseCacheNamePrefix()"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"isUseEntryProcessor()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"isUseLocks()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"isUseLocks()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.support","c":"LogType","l":"JDK"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"LifecycleEventHandler","l":"LifecycleEventHandler(MethodEventObserver<LifecycleEvent>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"listener()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"listener()"},{"p":"com.oracle.coherence.spring.data.repository","c":"ListenerSupport","l":"listener()"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataLoader","l":"load(ConfigDataLoaderContext, CoherenceConfigDataResource)","u":"load(org.springframework.boot.context.config.ConfigDataLoaderContext,com.oracle.coherence.spring.boot.config.CoherenceConfigDataResource)"},{"p":"com.oracle.coherence.spring.cachestore","c":"JpaRepositoryCacheLoader","l":"load(ID)"},{"p":"com.oracle.coherence.spring.cachestore","c":"JpaRepositoryCacheLoader","l":"loadAll(Collection<? extends ID>)","u":"loadAll(java.util.Collection)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataLocationResolver","l":"loadProperties(ConfigDataLocationResolverContext)","u":"loadProperties(org.springframework.boot.context.config.ConfigDataLocationResolverContext)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.support","c":"LogType","l":"LOG4J"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.support","c":"LogType","l":"LOG4J2"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataLocationResolver","l":"logger"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceGrpcClient","l":"logger"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceConversionServicePostProcessor","l":"logger"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"logger"},{"p":"com.oracle.coherence.spring.configuration","c":"EnableCoherenceImportBeanDefinitionRegistrar","l":"logger"},{"p":"com.oracle.coherence.spring.configuration","c":"NamedCacheConfiguration","l":"logger"},{"p":"com.oracle.coherence.spring.configuration","c":"NamedTopicConfiguration","l":"logger"},{"p":"com.oracle.coherence.spring.event","c":"CoherenceEventListenerMethodProcessor","l":"logger"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherProxyFactoryBean","l":"logger"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.LoggingProperties","l":"LoggingProperties()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.annotation","c":"CommitStrategy","l":"MANUAL"},{"p":"com.oracle.coherence.spring.configuration","c":"MapEventTransformerConfiguration","l":"mapEventTransformerService"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"MapListenerRegistrationBean","l":"MapListenerRegistrationBean(FilterService, MapEventTransformerService)","u":"%3Cinit%3E(com.oracle.coherence.spring.configuration.FilterService,com.oracle.coherence.spring.configuration.MapEventTransformerService)"},{"p":"com.oracle.coherence.spring.session.serialization.pof","c":"MapSessionPofSerializer","l":"MapSessionPofSerializer()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CachingEnabledCondition","l":"matches(ConditionContext, AnnotatedTypeMetadata)","u":"matches(org.springframework.context.annotation.ConditionContext,org.springframework.core.type.AnnotatedTypeMetadata)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"max(Filter<?>, Remote.ToBigDecimalFunction<? super T>)","u":"max(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"max(Filter<?>, Remote.ToBigDecimalFunction<? super T>)","u":"max(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"max(Filter<?>, Remote.ToComparableFunction<? super T, R>)","u":"max(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToComparableFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"max(Filter<?>, Remote.ToComparableFunction<? super T, R>)","u":"max(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToComparableFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"max(Filter<?>, Remote.ToDoubleFunction<? super T>)","u":"max(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"max(Filter<?>, Remote.ToDoubleFunction<? super T>)","u":"max(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"max(Filter<?>, Remote.ToIntFunction<? super T>)","u":"max(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"max(Filter<?>, Remote.ToIntFunction<? super T>)","u":"max(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"max(Filter<?>, Remote.ToLongFunction<? super T>)","u":"max(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"max(Filter<?>, Remote.ToLongFunction<? super T>)","u":"max(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"max(Remote.ToBigDecimalFunction<? super T>)","u":"max(com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"max(Remote.ToBigDecimalFunction<? super T>)","u":"max(com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"max(Remote.ToComparableFunction<? super T, R>)","u":"max(com.tangosol.util.function.Remote.ToComparableFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"max(Remote.ToComparableFunction<? super T, R>)","u":"max(com.tangosol.util.function.Remote.ToComparableFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"max(Remote.ToDoubleFunction<? super T>)","u":"max(com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"max(Remote.ToDoubleFunction<? super T>)","u":"max(com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"max(Remote.ToIntFunction<? super T>)","u":"max(com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"max(Remote.ToIntFunction<? super T>)","u":"max(com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"max(Remote.ToLongFunction<? super T>)","u":"max(com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"max(Remote.ToLongFunction<? super T>)","u":"max(com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.annotation","c":"CoherencePublisher","l":"maxBlock()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"maxBy(Filter<?>, ValueExtractor<? super T, ? extends R>)","u":"maxBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"maxBy(Filter<?>, ValueExtractor<? super T, ? extends R>)","u":"maxBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"maxBy(ValueExtractor<? super T, ? extends R>)","u":"maxBy(com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"maxBy(ValueExtractor<? super T, ? extends R>)","u":"maxBy(com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.event","c":"BaseMethodObserver","l":"method"},{"p":"com.oracle.coherence.spring.event.liveevent","c":"MethodEventObserver","l":"MethodEventObserver(String, Method, ApplicationContext)","u":"%3Cinit%3E(java.lang.String,java.lang.reflect.Method,org.springframework.context.ApplicationContext)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"MethodMapListener","l":"MethodMapListener(String, Method, ApplicationContext)","u":"%3Cinit%3E(java.lang.String,java.lang.reflect.Method,org.springframework.context.ApplicationContext)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"min(Filter<?>, Remote.ToBigDecimalFunction<? super T>)","u":"min(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"min(Filter<?>, Remote.ToBigDecimalFunction<? super T>)","u":"min(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"min(Filter<?>, Remote.ToComparableFunction<? super T, R>)","u":"min(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToComparableFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"min(Filter<?>, Remote.ToComparableFunction<? super T, R>)","u":"min(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToComparableFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"min(Filter<?>, Remote.ToDoubleFunction<? super T>)","u":"min(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"min(Filter<?>, Remote.ToDoubleFunction<? super T>)","u":"min(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"min(Filter<?>, Remote.ToIntFunction<? super T>)","u":"min(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"min(Filter<?>, Remote.ToIntFunction<? super T>)","u":"min(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"min(Filter<?>, Remote.ToLongFunction<? super T>)","u":"min(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"min(Filter<?>, Remote.ToLongFunction<? super T>)","u":"min(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"min(Remote.ToBigDecimalFunction<? super T>)","u":"min(com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"min(Remote.ToBigDecimalFunction<? super T>)","u":"min(com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"min(Remote.ToComparableFunction<? super T, R>)","u":"min(com.tangosol.util.function.Remote.ToComparableFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"min(Remote.ToComparableFunction<? super T, R>)","u":"min(com.tangosol.util.function.Remote.ToComparableFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"min(Remote.ToDoubleFunction<? super T>)","u":"min(com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"min(Remote.ToDoubleFunction<? super T>)","u":"min(com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"min(Remote.ToIntFunction<? super T>)","u":"min(com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"min(Remote.ToIntFunction<? super T>)","u":"min(com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"min(Remote.ToLongFunction<? super T>)","u":"min(com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"min(Remote.ToLongFunction<? super T>)","u":"min(com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"minBy(Filter<?>, ValueExtractor<? super T, ? extends R>)","u":"minBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"minBy(Filter<?>, ValueExtractor<? super T, ? extends R>)","u":"minBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"minBy(ValueExtractor<? super T, ? extends R>)","u":"minBy(com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"minBy(ValueExtractor<? super T, ? extends R>)","u":"minBy(com.tangosol.util.ValueExtractor)"},{"p":"com.oracle.coherence.spring.annotation","c":"CoherencePublisher","l":"name()"},{"p":"com.oracle.coherence.spring.configuration.annotation","c":"CoherenceAsyncCache","l":"name()"},{"p":"com.oracle.coherence.spring.configuration.annotation","c":"CoherenceAsyncMap","l":"name()"},{"p":"com.oracle.coherence.spring.configuration.annotation","c":"CoherenceCache","l":"name()"},{"p":"com.oracle.coherence.spring.configuration.annotation","c":"CoherenceMap","l":"name()"},{"p":"com.oracle.coherence.spring.configuration","c":"NamedCacheConfiguration","l":"NamedCacheConfiguration(FilterService, ExtractorService)","u":"%3Cinit%3E(com.oracle.coherence.spring.configuration.FilterService,com.oracle.coherence.spring.configuration.ExtractorService)"},{"p":"com.oracle.coherence.spring.data.config","c":"EnableCoherenceRepositories","l":"namedQueriesLocation()"},{"p":"com.oracle.coherence.spring.configuration","c":"NamedTopicConfiguration","l":"NamedTopicConfiguration(FilterService, ExtractorService)","u":"%3Cinit%3E(com.oracle.coherence.spring.configuration.FilterService,com.oracle.coherence.spring.configuration.ExtractorService)"},{"p":"com.oracle.coherence.spring.namespace","c":"NamespaceHandler","l":"NamespaceHandler()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.annotation.event","c":"Backlog.Type","l":"NORMAL"},{"p":"com.oracle.coherence.spring.event.liveevent","c":"MethodEventObserver","l":"notify(E)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"EventHandler","l":"observer"},{"p":"com.oracle.coherence.spring","c":"SpringBasedCoherenceSession","l":"onApplicationEvent(ApplicationContextEvent)","u":"onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherenceTopicListenerSubscribers","l":"onEvent(CoherenceLifecycleEvent)","u":"onEvent(com.tangosol.net.events.CoherenceLifecycleEvent)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"EventHandler","l":"onEvent(E)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherProxyFactoryBean","l":"onInit()"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"CoherenceQueryCreator","l":"or(QueryState, QueryState)","u":"or(com.oracle.coherence.spring.data.repository.query.QueryState,com.oracle.coherence.spring.data.repository.query.QueryState)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherRegistrar","l":"parse(Map<String, Object>)","u":"parse(java.util.Map)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"FederationEventHandler","l":"participantName"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"FederationEventHandler","l":"participantNameFunction"},{"p":"com.oracle.coherence.spring.annotation","c":"PofExtractor","l":"path()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CommonExtractorFactories","l":"pofExtractor()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CommonExtractorFactories","l":"pofExtractors()"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"pofSerializer()"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryConfigurationExtension","l":"postProcess(BeanDefinitionBuilder, AnnotationRepositoryConfigurationSource)","u":"postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource)"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceConversionServicePostProcessor","l":"postProcessBeanFactory(ConfigurableListableBeanFactory)","u":"postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"},{"p":"com.oracle.coherence.spring.event","c":"CoherenceEventListenerMethodProcessor","l":"postProcessBeanFactory(ConfigurableListableBeanFactory)","u":"postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherenceTopicListenerPostProcessor","l":"postProcessBeanFactory(ConfigurableListableBeanFactory)","u":"postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"PREFIX"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"PREFIX"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanFactoryBuilder.CoherenceApplicationContext","l":"prepareBeanFactory(ConfigurableListableBeanFactory)","u":"prepareBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"PRINCIPAL_NAME_ATTRIBUTE"},{"p":"com.oracle.coherence.spring.session.support","c":"PrincipalNameExtractor","l":"PrincipalNameExtractor()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.session","c":"SessionUpdateEntryProcessor","l":"process(InvocableMap.Entry<String, MapSession>)","u":"process(com.tangosol.util.InvocableMap.Entry)"},{"p":"com.oracle.coherence.spring.namespace","c":"BeanProcessor","l":"process(ProcessingContext, XmlElement)","u":"process(com.tangosol.config.xml.ProcessingContext,com.tangosol.run.xml.XmlElement)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.PropertyProcessor","l":"process(ProcessingContext, XmlElement)","u":"process(com.tangosol.config.xml.ProcessingContext,com.tangosol.run.xml.XmlElement)"},{"p":"com.oracle.coherence.spring.event","c":"CoherenceEventListenerCandidates","l":"processEventListeners()"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.PropertyProcessor","l":"PropertyProcessor()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.annotation","c":"CoherencePublisher","l":"proxyDefaultMethods()"},{"p":"com.oracle.coherence.spring.messaging","c":"Publishers","l":"Publishers()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCache","l":"put(Object, Object)","u":"put(java.lang.Object,java.lang.Object)"},{"p":"com.oracle.coherence.spring.data.config","c":"EnableCoherenceRepositories","l":"queryLookupStrategy()"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"QueryResult","l":"QueryResult(QueryState, Sort)","u":"%3Cinit%3E(com.oracle.coherence.spring.data.repository.query.QueryState,org.springframework.data.domain.Sort)"},{"p":"com.oracle.coherence.spring.data.repository.query","c":"QueryState","l":"QueryState()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.session","c":"SessionUpdateEntryProcessor","l":"readExternal(PofReader)","u":"readExternal(com.tangosol.io.pof.PofReader)"},{"p":"com.oracle.coherence.spring.session.support","c":"PrincipalNameExtractor","l":"readExternal(PofReader)","u":"readExternal(com.tangosol.io.pof.PofReader)"},{"p":"com.oracle.coherence.spring.namespace","c":"BeanBuilder","l":"realize(ParameterResolver, ClassLoader, ParameterList)","u":"realize(com.tangosol.config.expression.ParameterResolver,java.lang.ClassLoader,com.tangosol.coherence.config.ParameterList)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanBuilder","l":"realize(ParameterResolver, ClassLoader, ParameterList)","u":"realize(com.tangosol.config.expression.ParameterResolver,java.lang.ClassLoader,com.tangosol.coherence.config.ParameterList)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanFactoryBuilder","l":"realize(ParameterResolver, ClassLoader, ParameterList)","u":"realize(com.tangosol.config.expression.ParameterResolver,java.lang.ClassLoader,com.tangosol.coherence.config.ParameterList)"},{"p":"com.oracle.coherence.spring.namespace","c":"BeanBuilder","l":"realizes(Class<?>, ParameterResolver, ClassLoader)","u":"realizes(java.lang.Class,com.tangosol.config.expression.ParameterResolver,java.lang.ClassLoader)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanBuilder","l":"realizes(Class<?>, ParameterResolver, ClassLoader)","u":"realizes(java.lang.Class,com.tangosol.config.expression.ParameterResolver,java.lang.ClassLoader)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanFactoryBuilder","l":"realizes(Class<?>, ParameterResolver, ClassLoader)","u":"realizes(java.lang.Class,com.tangosol.config.expression.ParameterResolver,java.lang.ClassLoader)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.messaging","c":"CoherencePublisherAutoConfigurationScanRegistrar","l":"registerBeanDefinitions(AnnotationMetadata, BeanDefinitionRegistry)","u":"registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherRegistrar","l":"registerBeanDefinitions(AnnotationMetadata, BeanDefinitionRegistry)","u":"registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherScanRegistrar","l":"registerBeanDefinitions(AnnotationMetadata, BeanDefinitionRegistry)","u":"registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry)"},{"p":"com.oracle.coherence.spring.configuration","c":"EnableCoherenceImportBeanDefinitionRegistrar","l":"registerBeanDefinitions(AnnotationMetadata, BeanDefinitionRegistry, BeanNameGenerator)","u":"registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.BeanNameGenerator)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"removeListener(AbstractRepositoryBase.Listener<? super T>)","u":"removeListener(com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"removeListener(AbstractRepositoryBase.Listener<? super T>)","u":"removeListener(com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"ListenerSupport","l":"removeListener(AbstractRepositoryBase.Listener<? super T>)","u":"removeListener(com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"removeListener(Filter<?>, AbstractRepositoryBase.Listener<? super T>)","u":"removeListener(com.tangosol.util.Filter,com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"removeListener(Filter<?>, AbstractRepositoryBase.Listener<? super T>)","u":"removeListener(com.tangosol.util.Filter,com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"ListenerSupport","l":"removeListener(Filter<?>, AbstractRepositoryBase.Listener<? super T>)","u":"removeListener(com.tangosol.util.Filter,com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"removeListener(ID, AbstractRepositoryBase.Listener<? super T>)","u":"removeListener(ID,com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"removeListener(ID, AbstractRepositoryBase.Listener<? super T>)","u":"removeListener(ID,com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.data.repository","c":"ListenerSupport","l":"removeListener(ID, AbstractRepositoryBase.Listener<? super T>)","u":"removeListener(ID,com.oracle.coherence.repository.AbstractRepositoryBase.Listener)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"EventHandler","l":"removeScope(String)","u":"removeScope(java.lang.String)"},{"p":"com.oracle.coherence.spring.data.config","c":"EnableCoherenceRepositories","l":"repositoryBaseClass()"},{"p":"com.oracle.coherence.spring.data.config","c":"EnableCoherenceRepositories","l":"repositoryFactoryBeanClass()"},{"p":"com.oracle.coherence.spring.data.config","c":"EnableCoherenceRepositories","l":"repositoryImplementationPostfix()"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"resetMaxInactiveIntervalForActiveSessions()"},{"p":"com.oracle.coherence.spring.configuration","c":"ExtractorService","l":"resolve(Collection<Annotation>)","u":"resolve(java.util.Collection)"},{"p":"com.oracle.coherence.spring.configuration","c":"FilterService","l":"resolve(Collection<Annotation>)","u":"resolve(java.util.Collection)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataLocationResolver","l":"resolve(ConfigDataLocationResolverContext, ConfigDataLocation)","u":"resolve(org.springframework.boot.context.config.ConfigDataLocationResolverContext,org.springframework.boot.context.config.ConfigDataLocation)"},{"p":"com.oracle.coherence.spring.configuration","c":"MapEventTransformerService","l":"resolve(Set<Annotation>)","u":"resolve(java.util.Set)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataLocationResolver","l":"resolveProfileSpecific(ConfigDataLocationResolverContext, ConfigDataLocation, Profiles)","u":"resolveProfileSpecific(org.springframework.boot.context.config.ConfigDataLocationResolverContext,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.Profiles)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"save(CoherenceSpringSession)","u":"save(com.oracle.coherence.spring.session.CoherenceSpringSession)"},{"p":"com.oracle.coherence.spring.data.repository","c":"AsyncCrudRepository","l":"save(S)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"save(S)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"save(S)"},{"p":"com.oracle.coherence.spring.data.repository","c":"AsyncCrudRepository","l":"saveAll(Iterable<S>)","u":"saveAll(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingAsyncRepository","l":"saveAll(Iterable<S>)","u":"saveAll(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"BackingRepository","l":"saveAll(Iterable<S>)","u":"saveAll(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"saveAll(Iterable<S>)","u":"saveAll(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"saveAll(Iterable<S>)","u":"saveAll(java.lang.Iterable)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"saveAll(Stream<? extends T>)","u":"saveAll(java.util.stream.Stream)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"saveAll(Stream<? extends T>)","u":"saveAll(java.util.stream.Stream)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"EnableCoherenceHttpSession","l":"saveMode()"},{"p":"com.oracle.coherence.spring.session.serialization.pof","c":"SecurityContextPofSerializer","l":"SecurityContextPofSerializer()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.session.serialization.pof","c":"AuthenticationPofSerializer","l":"serialize(PofWriter, Object)","u":"serialize(com.tangosol.io.pof.PofWriter,java.lang.Object)"},{"p":"com.oracle.coherence.spring.session.serialization.pof","c":"GrantedAuthorityPofSerializer","l":"serialize(PofWriter, Object)","u":"serialize(com.tangosol.io.pof.PofWriter,java.lang.Object)"},{"p":"com.oracle.coherence.spring.session.serialization.pof","c":"MapSessionPofSerializer","l":"serialize(PofWriter, Object)","u":"serialize(com.tangosol.io.pof.PofWriter,java.lang.Object)"},{"p":"com.oracle.coherence.spring.session.serialization.pof","c":"SecurityContextPofSerializer","l":"serialize(PofWriter, Object)","u":"serialize(com.tangosol.io.pof.PofWriter,java.lang.Object)"},{"p":"com.oracle.coherence.spring.configuration.session","c":"SessionType","l":"SERVER"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.ServerProperties","l":"ServerProperties()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.configuration.session","c":"ServerSessionConfigurationBean","l":"ServerSessionConfigurationBean()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"CacheEventHandler","l":"serviceName"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"ServiceEventHandler","l":"serviceName"},{"p":"com.oracle.coherence.spring.configuration.annotation","c":"CoherenceAsyncCache","l":"session()"},{"p":"com.oracle.coherence.spring.configuration.annotation","c":"CoherenceAsyncMap","l":"session()"},{"p":"com.oracle.coherence.spring.configuration.annotation","c":"CoherenceCache","l":"session()"},{"p":"com.oracle.coherence.spring.configuration.annotation","c":"CoherenceMap","l":"session()"},{"p":"com.oracle.coherence.spring.data.config","c":"CoherenceMap","l":"session()"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"EnableCoherenceHttpSession","l":"session()"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"session(InjectionPoint)","u":"session(org.springframework.beans.factory.InjectionPoint)"},{"p":"com.oracle.coherence.spring.configuration.session","c":"SessionConfigurationBean","l":"SessionConfigurationBean()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.configuration.session","c":"SessionConfigurationBean","l":"SessionConfigurationBean(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"SessionLifecycleEventHandler","l":"SessionLifecycleEventHandler(MethodEventObserver<SessionLifecycleEvent>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"CacheEventHandler","l":"sessionName"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.SessionProperties","l":"SessionProperties()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"CoherenceHttpSessionConfiguration","l":"sessionRepository()"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"EnableCoherenceHttpSession","l":"sessionTimeoutInSeconds()"},{"p":"com.oracle.coherence.spring.session","c":"SessionUpdateEntryProcessor","l":"SessionUpdateEntryProcessor()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring","c":"CoherenceContext","l":"setApplicationContext(ApplicationContext)","u":"setApplicationContext(org.springframework.context.ApplicationContext)"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"setApplicationContext(ApplicationContext)","u":"setApplicationContext(org.springframework.context.ApplicationContext)"},{"p":"com.oracle.coherence.spring.event","c":"CoherenceEventListenerCandidates","l":"setApplicationContext(ApplicationContext)","u":"setApplicationContext(org.springframework.context.ApplicationContext)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherenceTopicListenerSubscribers","l":"setApplicationContext(ApplicationContext)","u":"setApplicationContext(org.springframework.context.ApplicationContext)"},{"p":"com.oracle.coherence.spring","c":"SpringBasedCoherenceSession","l":"setApplicationContext(ApplicationContext)","u":"setApplicationContext(org.springframework.context.ApplicationContext)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanFactoryBuilder","l":"setApplicationContextUri(Expression<String>)","u":"setApplicationContextUri(com.tangosol.config.expression.Expression)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"setApplicationEventPublisher(ApplicationEventPublisher)","u":"setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"setApplicationName(String)","u":"setApplicationName(java.lang.String)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherProxyFactoryBean","l":"setBeanClassLoader(ClassLoader)","u":"setBeanClassLoader(java.lang.ClassLoader)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.messaging","c":"CoherencePublisherAutoConfigurationScanRegistrar","l":"setBeanFactory(BeanFactory)","u":"setBeanFactory(org.springframework.beans.factory.BeanFactory)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanBuilder","l":"setBeanName(Expression<String>)","u":"setBeanName(com.tangosol.config.expression.Expression)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"setCache(CoherenceProperties.CacheAbstractionProperties)","u":"setCache(com.oracle.coherence.spring.boot.autoconfigure.CoherenceProperties.CacheAbstractionProperties)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"setCacheConfig(String)","u":"setCacheConfig(java.lang.String)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"setCacheName(String)","u":"setCacheName(java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"setCacheNamePrefix(String)","u":"setCacheNamePrefix(java.lang.String)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"setCacheNamePrefix(String)","u":"setCacheNamePrefix(java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.LoggingProperties","l":"setCharacterLimit(Integer)","u":"setCharacterLimit(java.lang.Integer)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.SessionProperties","l":"setClient(List<ClientSessionConfigurationBean>)","u":"setClient(java.util.List)"},{"p":"com.oracle.coherence.spring.data.support","c":"CoherenceRepositoryFactoryBean","l":"setCoherence(Coherence)","u":"setCoherence(com.tangosol.net.Coherence)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"CoherenceHttpSessionConfiguration","l":"setCoherence(ObjectProvider<Coherence>, ObjectProvider<Coherence>)","u":"setCoherence(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"setCoherenceEventListenerCandidates(CoherenceEventListenerCandidates)","u":"setCoherenceEventListenerCandidates(com.oracle.coherence.spring.event.CoherenceEventListenerCandidates)"},{"p":"com.oracle.coherence.spring.configuration","c":"DefaultCoherenceConfigurer","l":"setCoherenceInstanceType(CoherenceInstanceType)","u":"setCoherenceInstanceType(com.oracle.coherence.spring.configuration.support.CoherenceInstanceType)"},{"p":"com.oracle.coherence.spring.configuration","c":"DefaultCoherenceConfigurer","l":"setCoherenceServerStartupTimeout(Duration)","u":"setCoherenceServerStartupTimeout(java.time.Duration)"},{"p":"com.oracle.coherence.spring.configuration.session","c":"SessionConfigurationBean","l":"setConfig(String)","u":"setConfig(java.lang.String)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"setDefaultMaxInactiveInterval(Duration)","u":"setDefaultMaxInactiveInterval(java.time.Duration)"},{"p":"com.oracle.coherence.spring.session","c":"SessionUpdateEntryProcessor","l":"setDefaultMaxInactiveInterval(Duration)","u":"setDefaultMaxInactiveInterval(java.time.Duration)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.LoggingProperties","l":"setDestination(LogType)","u":"setDestination(com.oracle.coherence.spring.boot.autoconfigure.support.LogType)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"setEnabled(boolean)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.data","c":"CoherenceRepositoriesRegistrar","l":"setEnvironment(Environment)","u":"setEnvironment(org.springframework.core.env.Environment)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherScanRegistrar","l":"setEnvironment(Environment)","u":"setEnvironment(org.springframework.core.env.Environment)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanBuilder","l":"setFactoryName(Expression<String>)","u":"setFactoryName(com.tangosol.config.expression.Expression)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanFactoryBuilder","l":"setFactoryName(Expression<String>)","u":"setFactoryName(com.tangosol.config.expression.Expression)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"setFailFast(boolean)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"setFilter(Filter<?>)","u":"setFilter(com.tangosol.util.Filter)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.session","c":"CoherenceSpringSessionProperties","l":"setFlushMode(FlushMode)","u":"setFlushMode(org.springframework.session.FlushMode)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"setFlushMode(FlushMode)","u":"setFlushMode(org.springframework.session.FlushMode)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"CoherenceHttpSessionConfiguration","l":"setFlushMode(FlushMode)","u":"setFlushMode(org.springframework.session.FlushMode)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"CoherenceHttpSessionConfiguration","l":"setImportMetadata(AnnotationMetadata)","u":"setImportMetadata(org.springframework.core.type.AnnotationMetadata)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"setIndexResolver(IndexResolver<Session>)","u":"setIndexResolver(org.springframework.session.IndexResolver)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"CoherenceHttpSessionConfiguration","l":"setIndexResolver(IndexResolver<Session>)","u":"setIndexResolver(org.springframework.session.IndexResolver)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"setInstance(CoherenceProperties.InstanceProperties)","u":"setInstance(com.oracle.coherence.spring.boot.autoconfigure.CoherenceProperties.InstanceProperties)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"setLiteEvent(boolean)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"setLockEntireCache(boolean)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"setLockEntireCache(boolean)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"setLockTimeout(long)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"setLockTimeout(long)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.LoggingProperties","l":"setLoggerName(String)","u":"setLoggerName(java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"setLogging(CoherenceProperties.LoggingProperties)","u":"setLogging(com.oracle.coherence.spring.boot.autoconfigure.CoherenceProperties.LoggingProperties)"},{"p":"com.oracle.coherence.spring.event","c":"CoherenceEventListenerCandidates","l":"setMapListenerRegistrationBean(MapListenerRegistrationBean)","u":"setMapListenerRegistrationBean(com.oracle.coherence.spring.event.mapevent.MapListenerRegistrationBean)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.session","c":"CoherenceSpringSessionProperties","l":"setMapName(String)","u":"setMapName(java.lang.String)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherProxyFactoryBean","l":"setMaxBlock(String)","u":"setMaxBlock(java.lang.String)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"CoherenceHttpSessionConfiguration","l":"setMaxInactiveIntervalInSeconds(int)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.LoggingProperties","l":"setMessageFormat(String)","u":"setMessageFormat(java.lang.String)"},{"p":"com.oracle.coherence.spring.configuration.session","c":"AbstractSessionConfigurationBean","l":"setName(String)","u":"setName(java.lang.String)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanBuilder","l":"setParameterList(ParameterList)","u":"setParameterList(com.tangosol.coherence.config.ParameterList)"},{"p":"com.oracle.coherence.spring","c":"CoherenceBeanExpressionResolver","l":"setParameterResolver(ParameterResolver)","u":"setParameterResolver(com.tangosol.config.expression.ParameterResolver)"},{"p":"com.oracle.coherence.spring.configuration.session","c":"AbstractSessionConfigurationBean","l":"setPriority(int)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"setProfile(String)","u":"setProfile(java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"setProperties(Map<String, String>)","u":"setProperties(java.util.Map)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"setPropertyPrefix(String)","u":"setPropertyPrefix(java.lang.String)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherProxyFactoryBean","l":"setProxyDefaultMethods(boolean)"},{"p":"com.oracle.coherence.spring.messaging","c":"CoherencePublisherScanRegistrar","l":"setResourceLoader(ResourceLoader)","u":"setResourceLoader(org.springframework.core.io.ResourceLoader)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.session","c":"CoherenceSpringSessionProperties","l":"setSaveMode(SaveMode)","u":"setSaveMode(org.springframework.session.SaveMode)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"setSaveMode(SaveMode)","u":"setSaveMode(org.springframework.session.SaveMode)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"CoherenceHttpSessionConfiguration","l":"setSaveMode(SaveMode)","u":"setSaveMode(org.springframework.session.SaveMode)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"setScopeName(String)","u":"setScopeName(java.lang.String)"},{"p":"com.oracle.coherence.spring.configuration.session","c":"AbstractSessionConfigurationBean","l":"setScopeName(String)","u":"setScopeName(java.lang.String)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"setScopeName(String)","u":"setScopeName(java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"setServer(CoherenceProperties.ServerProperties)","u":"setServer(com.oracle.coherence.spring.boot.autoconfigure.CoherenceProperties.ServerProperties)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.SessionProperties","l":"setServer(List<ServerSessionConfigurationBean>)","u":"setServer(java.util.List)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"setServiceName(String)","u":"setServiceName(java.lang.String)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"setSession(String)","u":"setSession(java.lang.String)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"setSessionIdGenerator(SessionIdGenerator)","u":"setSessionIdGenerator(org.springframework.session.SessionIdGenerator)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"CoherenceHttpSessionConfiguration","l":"setSessionIdGenerator(SessionIdGenerator)","u":"setSessionIdGenerator(org.springframework.session.SessionIdGenerator)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"setSessionMapName(String)","u":"setSessionMapName(java.lang.String)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"CoherenceHttpSessionConfiguration","l":"setSessionMapName(String)","u":"setSessionMapName(java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigClientProperties","l":"setSessionName(String)","u":"setSessionName(java.lang.String)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"CoherenceHttpSessionConfiguration","l":"setSessionRepositoryCustomizer(ObjectProvider<SessionRepositoryCustomizer<CoherenceIndexedSessionRepository>>)","u":"setSessionRepositoryCustomizer(org.springframework.beans.factory.ObjectProvider)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties","l":"setSessions(CoherenceProperties.SessionProperties)","u":"setSessions(com.oracle.coherence.spring.boot.autoconfigure.CoherenceProperties.SessionProperties)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.LoggingProperties","l":"setSeverityLevel(Integer)","u":"setSeverityLevel(java.lang.Integer)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.ServerProperties","l":"setStartupTimeout(Duration)","u":"setStartupTimeout(java.time.Duration)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"setSynchronousEvents(boolean)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"setTimeToLive(Duration)","u":"setTimeToLive(java.time.Duration)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"setTimeToLive(Duration)","u":"setTimeToLive(java.time.Duration)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"setTransformer(MapEventTransformer<K, V, ?>)","u":"setTransformer(com.tangosol.util.MapEventTransformer)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.InstanceProperties","l":"setType(CoherenceInstanceType)","u":"setType(com.oracle.coherence.spring.configuration.support.CoherenceInstanceType)"},{"p":"com.oracle.coherence.spring.configuration.session","c":"AbstractSessionConfigurationBean","l":"setType(SessionType)","u":"setType(com.oracle.coherence.spring.configuration.session.SessionType)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"setUseCacheNamePrefix(boolean)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"setUseCacheNamePrefix(boolean)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.session","c":"CoherenceSpringSessionProperties","l":"setUseEntryProcessor(boolean)"},{"p":"com.oracle.coherence.spring.session","c":"CoherenceIndexedSessionRepository","l":"setUseEntryProcessor(boolean)"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"CoherenceHttpSessionConfiguration","l":"setUseEntryProcessor(boolean)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure","c":"CoherenceProperties.CacheAbstractionProperties","l":"setUseLocks(boolean)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCacheConfiguration","l":"setUseLocks(boolean)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"FederationEventHandler","l":"shouldFire(E)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"SimpleMapListener(MethodMapListener<K, V>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.mapevent.MethodMapListener)"},{"p":"com.oracle.coherence.spring.cache","c":"CoherenceCache","l":"size()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.support","c":"LogType","l":"SLF4J"},{"p":"com.oracle.coherence.spring.configuration","c":"CoherenceSpringConfiguration","l":"SPRING_SYSTEM_PROPERTY_RESOLVER_BEAN_NAME"},{"p":"com.oracle.coherence.spring","c":"SpringBasedCoherenceSession","l":"SpringBasedCoherenceSession()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring","c":"SpringBasedCoherenceSession","l":"SpringBasedCoherenceSession(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanBuilder","l":"SpringBeanBuilder(ResourceRegistry)","u":"%3Cinit%3E(com.tangosol.util.ResourceRegistry)"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanFactoryBuilder","l":"SpringBeanFactoryBuilder(ResourceRegistry, ExpressionParser)","u":"%3Cinit%3E(com.tangosol.util.ResourceRegistry,com.tangosol.config.expression.ExpressionParser)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.session","c":"CoherenceSpringSessionAutoConfiguration.SpringBootCoherenceHttpSessionConfiguration","l":"SpringBootCoherenceHttpSessionConfiguration()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler","l":"SpringNamespaceHandler()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.tracing","c":"SpringPropertySource","l":"SpringPropertySource()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"SpringSystemPropertyResolver","l":"SpringSystemPropertyResolver()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"SpringSystemPropertyResolver","l":"SpringSystemPropertyResolver(Environment)","u":"%3Cinit%3E(org.springframework.core.env.Environment)"},{"p":"com.oracle.coherence.spring.configuration.support","c":"SpringSystemPropertyResolver","l":"SpringSystemPropertyResolver(Environment, String)","u":"%3Cinit%3E(org.springframework.core.env.Environment,java.lang.String)"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"start()"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"STARTUP_TIMEOUT_SYSTEM_PROPERTY"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.support","c":"LogType","l":"STDERR"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.support","c":"LogType","l":"STDOUT"},{"p":"com.oracle.coherence.spring.messaging","c":"SubscriberExceptionHandler.Action","l":"Stop"},{"p":"com.oracle.coherence.spring","c":"CoherenceServer","l":"stop()"},{"p":"com.oracle.coherence.spring.cachestore","c":"JpaRepositoryCacheStore","l":"store(ID, T)","u":"store(ID,T)"},{"p":"com.oracle.coherence.spring.cachestore","c":"JpaRepositoryCacheStore","l":"storeAll(Map<? extends ID, ? extends T>)","u":"storeAll(java.util.Map)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"stream()"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"stream(Collection<? extends ID>)","u":"stream(java.util.Collection)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"stream(Filter<?>)","u":"stream(com.tangosol.util.Filter)"},{"p":"com.oracle.coherence.spring.messaging","c":"CompletableFuturePublisher","l":"subscribe(Subscriber<? super T>)","u":"subscribe(org.reactivestreams.Subscriber)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"sum(Filter<?>, Remote.ToBigDecimalFunction<? super T>)","u":"sum(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"sum(Filter<?>, Remote.ToBigDecimalFunction<? super T>)","u":"sum(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"sum(Filter<?>, Remote.ToDoubleFunction<? super T>)","u":"sum(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"sum(Filter<?>, Remote.ToDoubleFunction<? super T>)","u":"sum(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"sum(Filter<?>, Remote.ToIntFunction<? super T>)","u":"sum(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"sum(Filter<?>, Remote.ToIntFunction<? super T>)","u":"sum(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"sum(Filter<?>, Remote.ToLongFunction<? super T>)","u":"sum(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"sum(Filter<?>, Remote.ToLongFunction<? super T>)","u":"sum(com.tangosol.util.Filter,com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"sum(Remote.ToBigDecimalFunction<? super T>)","u":"sum(com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"sum(Remote.ToBigDecimalFunction<? super T>)","u":"sum(com.tangosol.util.function.Remote.ToBigDecimalFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"sum(Remote.ToDoubleFunction<? super T>)","u":"sum(com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"sum(Remote.ToDoubleFunction<? super T>)","u":"sum(com.tangosol.util.function.Remote.ToDoubleFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"sum(Remote.ToIntFunction<? super T>)","u":"sum(com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"sum(Remote.ToIntFunction<? super T>)","u":"sum(com.tangosol.util.function.Remote.ToIntFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"sum(Remote.ToLongFunction<? super T>)","u":"sum(com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"sum(Remote.ToLongFunction<? super T>)","u":"sum(com.tangosol.util.function.Remote.ToLongFunction)"},{"p":"com.oracle.coherence.spring.annotation","c":"CommitStrategy","l":"SYNC"},{"p":"com.oracle.coherence.spring.data.support","c":"Utils","l":"toComparator(Sort)","u":"toComparator(org.springframework.data.domain.Sort)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"top(Filter<?>, ValueExtractor<? super T, ? extends R>, int)","u":"top(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"top(Filter<?>, ValueExtractor<? super T, ? extends R>, int)","u":"top(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"top(Filter<?>, ValueExtractor<? super T, ? extends R>, Remote.Comparator<? super R>, int)","u":"top(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,com.tangosol.util.function.Remote.Comparator,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"top(Filter<?>, ValueExtractor<? super T, ? extends R>, Remote.Comparator<? super R>, int)","u":"top(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,com.tangosol.util.function.Remote.Comparator,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"top(ValueExtractor<? super T, ? extends R>, int)","u":"top(com.tangosol.util.ValueExtractor,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"top(ValueExtractor<? super T, ? extends R>, int)","u":"top(com.tangosol.util.ValueExtractor,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"top(ValueExtractor<? super T, ? extends R>, Remote.Comparator<? super R>, int)","u":"top(com.tangosol.util.ValueExtractor,com.tangosol.util.function.Remote.Comparator,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"top(ValueExtractor<? super T, ? extends R>, Remote.Comparator<? super R>, int)","u":"top(com.tangosol.util.ValueExtractor,com.tangosol.util.function.Remote.Comparator,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"topBy(Filter<?>, Remote.Comparator<? super T>, int)","u":"topBy(com.tangosol.util.Filter,com.tangosol.util.function.Remote.Comparator,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"topBy(Filter<?>, Remote.Comparator<? super T>, int)","u":"topBy(com.tangosol.util.Filter,com.tangosol.util.function.Remote.Comparator,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"topBy(Filter<?>, ValueExtractor<? super T, ? extends R>, int)","u":"topBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"topBy(Filter<?>, ValueExtractor<? super T, ? extends R>, int)","u":"topBy(com.tangosol.util.Filter,com.tangosol.util.ValueExtractor,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"topBy(Remote.Comparator<? super T>, int)","u":"topBy(com.tangosol.util.function.Remote.Comparator,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"topBy(Remote.Comparator<? super T>, int)","u":"topBy(com.tangosol.util.function.Remote.Comparator,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"topBy(ValueExtractor<? super T, ? extends R>, int)","u":"topBy(com.tangosol.util.ValueExtractor,int)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"topBy(ValueExtractor<? super T, ? extends R>, int)","u":"topBy(com.tangosol.util.ValueExtractor,int)"},{"p":"com.oracle.coherence.spring.boot.config","c":"CoherenceConfigDataResource","l":"toString()"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"AnnotatedMapListener","l":"toString()"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"toString()"},{"p":"com.oracle.coherence.spring","c":"SpringNamespaceHandler.SpringBeanFactoryBuilder.CoherenceApplicationContext","l":"toString()"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"TransactionEventHandler","l":"TransactionEventHandler(MethodEventObserver<TransactionEvent>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"TransferEventHandler","l":"TransferEventHandler(MethodEventObserver<TransferEvent>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.annotation","c":"PofExtractor","l":"type()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CommonExtractorFactories","l":"universalExtractor()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CommonExtractorFactories","l":"universalExtractors()"},{"p":"com.oracle.coherence.spring.event.liveevent.handler","c":"UnsolicitedCommitEventHandler","l":"UnsolicitedCommitEventHandler(MethodEventObserver<UnsolicitedCommitEvent>)","u":"%3Cinit%3E(com.oracle.coherence.spring.event.liveevent.MethodEventObserver)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"update(ID, Remote.BiFunction<? super T, ? super U, ? extends R>, U)","u":"update(ID,com.tangosol.util.function.Remote.BiFunction,U)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"update(ID, Remote.BiFunction<? super T, ? super U, ? extends R>, U)","u":"update(ID,com.tangosol.util.function.Remote.BiFunction,U)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"update(ID, Remote.BiFunction<? super T, ? super U, ? extends R>, U, EntityFactory<? super ID, ? extends T>)","u":"update(ID,com.tangosol.util.function.Remote.BiFunction,U,com.oracle.coherence.repository.EntityFactory)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"update(ID, Remote.BiFunction<? super T, ? super U, ? extends R>, U, EntityFactory<? super ID, ? extends T>)","u":"update(ID,com.tangosol.util.function.Remote.BiFunction,U,com.oracle.coherence.repository.EntityFactory)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"update(ID, Remote.Function<? super T, ? extends R>)","u":"update(ID,com.tangosol.util.function.Remote.Function)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"update(ID, Remote.Function<? super T, ? extends R>)","u":"update(ID,com.tangosol.util.function.Remote.Function)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"update(ID, Remote.Function<? super T, ? extends R>, EntityFactory<? super ID, ? extends T>)","u":"update(ID,com.tangosol.util.function.Remote.Function,com.oracle.coherence.repository.EntityFactory)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"update(ID, Remote.Function<? super T, ? extends R>, EntityFactory<? super ID, ? extends T>)","u":"update(ID,com.tangosol.util.function.Remote.Function,com.oracle.coherence.repository.EntityFactory)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"update(ID, ValueUpdater<? super T, ? super U>, U)","u":"update(ID,com.tangosol.util.ValueUpdater,U)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"update(ID, ValueUpdater<? super T, ? super U>, U)","u":"update(ID,com.tangosol.util.ValueUpdater,U)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"update(ID, ValueUpdater<? super T, ? super U>, U, EntityFactory<? super ID, ? extends T>)","u":"update(ID,com.tangosol.util.ValueUpdater,U,com.oracle.coherence.repository.EntityFactory)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"update(ID, ValueUpdater<? super T, ? super U>, U, EntityFactory<? super ID, ? extends T>)","u":"update(ID,com.tangosol.util.ValueUpdater,U,com.oracle.coherence.repository.EntityFactory)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"updateAll(Filter<?>, Remote.BiFunction<? super T, ? super U, ? extends R>, U)","u":"updateAll(com.tangosol.util.Filter,com.tangosol.util.function.Remote.BiFunction,U)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"updateAll(Filter<?>, Remote.BiFunction<? super T, ? super U, ? extends R>, U)","u":"updateAll(com.tangosol.util.Filter,com.tangosol.util.function.Remote.BiFunction,U)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"updateAll(Filter<?>, Remote.Function<? super T, ? extends R>)","u":"updateAll(com.tangosol.util.Filter,com.tangosol.util.function.Remote.Function)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"updateAll(Filter<?>, Remote.Function<? super T, ? extends R>)","u":"updateAll(com.tangosol.util.Filter,com.tangosol.util.function.Remote.Function)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceAsyncRepository","l":"updateAll(Filter<?>, ValueUpdater<? super T, ? super U>, U)","u":"updateAll(com.tangosol.util.Filter,com.tangosol.util.ValueUpdater,U)"},{"p":"com.oracle.coherence.spring.data.repository","c":"CoherenceRepository","l":"updateAll(Filter<?>, ValueUpdater<? super T, ? super U>, U)","u":"updateAll(com.tangosol.util.Filter,com.tangosol.util.ValueUpdater,U)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"MapEventType","l":"UPDATED"},{"p":"com.oracle.coherence.spring.annotation","c":"CoherencePublisherScan","l":"useDefaultFilters()"},{"p":"com.oracle.coherence.spring.session.config.annotation.web.http","c":"EnableCoherenceHttpSession","l":"useEntryProcessor()"},{"p":"com.oracle.coherence.spring.data.support","c":"Utils","l":"Utils()","u":"%3Cinit%3E()"},{"p":"com.oracle.coherence.spring.annotation","c":"ChainedExtractor.Extractors","l":"value()"},{"p":"com.oracle.coherence.spring.annotation","c":"ChainedExtractor","l":"value()"},{"p":"com.oracle.coherence.spring.annotation","c":"CoherencePublisherScan","l":"value()"},{"p":"com.oracle.coherence.spring.annotation.event","c":"Backlog","l":"value()"},{"p":"com.oracle.coherence.spring.annotation.event","c":"CacheName","l":"value()"},{"p":"com.oracle.coherence.spring.annotation.event","c":"MapName","l":"value()"},{"p":"com.oracle.coherence.spring.annotation.event","c":"ParticipantName","l":"value()"},{"p":"com.oracle.coherence.spring.annotation.event","c":"Processor","l":"value()"},{"p":"com.oracle.coherence.spring.annotation.event","c":"ScopeName","l":"value()"},{"p":"com.oracle.coherence.spring.annotation.event","c":"ServiceName","l":"value()"},{"p":"com.oracle.coherence.spring.annotation","c":"Name","l":"value()"},{"p":"com.oracle.coherence.spring.annotation","c":"PofExtractor.Extractors","l":"value()"},{"p":"com.oracle.coherence.spring.annotation","c":"PropertyExtractor.Extractors","l":"value()"},{"p":"com.oracle.coherence.spring.annotation","c":"PropertyExtractor","l":"value()"},{"p":"com.oracle.coherence.spring.annotation","c":"SessionName","l":"value()"},{"p":"com.oracle.coherence.spring.annotation","c":"SubscriberGroup","l":"value()"},{"p":"com.oracle.coherence.spring.annotation","c":"Topic","l":"value()"},{"p":"com.oracle.coherence.spring.annotation","c":"Topics","l":"value()"},{"p":"com.oracle.coherence.spring.annotation","c":"WhereFilter","l":"value()"},{"p":"com.oracle.coherence.spring.configuration.annotation","c":"CoherenceAsyncCache","l":"value()"},{"p":"com.oracle.coherence.spring.configuration.annotation","c":"CoherenceAsyncMap","l":"value()"},{"p":"com.oracle.coherence.spring.configuration.annotation","c":"CoherenceCache","l":"value()"},{"p":"com.oracle.coherence.spring.configuration.annotation","c":"CoherenceMap","l":"value()"},{"p":"com.oracle.coherence.spring.data.config","c":"CoherenceMap","l":"value()"},{"p":"com.oracle.coherence.spring.data.config","c":"EnableCoherenceRepositories","l":"value()"},{"p":"com.oracle.coherence.spring.annotation","c":"CommitStrategy","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.oracle.coherence.spring.annotation.event","c":"Backlog.Type","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.support","c":"LogType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.oracle.coherence.spring.configuration.session","c":"SessionType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceInstanceType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"MapEventType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.oracle.coherence.spring.messaging","c":"SubscriberExceptionHandler.Action","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.oracle.coherence.spring.session.support","c":"SessionEvent","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.oracle.coherence.spring.annotation","c":"CommitStrategy","l":"values()"},{"p":"com.oracle.coherence.spring.annotation.event","c":"Backlog.Type","l":"values()"},{"p":"com.oracle.coherence.spring.boot.autoconfigure.support","c":"LogType","l":"values()"},{"p":"com.oracle.coherence.spring.configuration.session","c":"SessionType","l":"values()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CoherenceInstanceType","l":"values()"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"MapEventType","l":"values()"},{"p":"com.oracle.coherence.spring.messaging","c":"SubscriberExceptionHandler.Action","l":"values()"},{"p":"com.oracle.coherence.spring.session.support","c":"SessionEvent","l":"values()"},{"p":"com.oracle.coherence.spring.configuration.support","c":"CommonFilterFactories","l":"whereFactory()"},{"p":"com.oracle.coherence.spring.event.mapevent","c":"SimpleMapListener","l":"WILD_CARD"},{"p":"com.oracle.coherence.spring.session","c":"SessionUpdateEntryProcessor","l":"writeExternal(PofWriter)","u":"writeExternal(com.tangosol.io.pof.PofWriter)"},{"p":"com.oracle.coherence.spring.session.support","c":"PrincipalNameExtractor","l":"writeExternal(PofWriter)","u":"writeExternal(com.tangosol.io.pof.PofWriter)"}];updateSearchResults();