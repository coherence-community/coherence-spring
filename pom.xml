<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright (c) 2013, 2024, Oracle and/or its affiliates.
  Licensed under the Universal Permissive License v 1.0 as shown at
  https://oss.oracle.com/licenses/upl.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.oracle.coherence.spring</groupId>
	<artifactId>coherence-spring-parent</artifactId>
	<version>4.2.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Coherence Spring Project</name>

	<description>
		The Oracle Coherence Spring project provides support for using Spring
		with Coherence and vice-versa.
	</description>

	<url>https://github.com/coherence-community/coherence-spring</url>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/coherence-community/coherence-spring/issues</url>
	</issueManagement>

	<organization>
		<name>Oracle, Inc</name>
		<url>https://www.oracle.com/</url>
	</organization>

	<licenses>
		<license>
			<name>The Universal Permissive License (UPL), Version 1.0</name>
			<url>https://oss.oracle.com/licenses/upl</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>

		<developer>
			<name>Gunnar Hillert</name>
			<organization>Oracle Corporation</organization>
		</developer>

		<developer>
			<name>Ryan Lubke</name>
			<organization>Oracle Corporation</organization>
		</developer>

		<developer>
			<name>Vaso Putica</name>
			<organization>Oracle Corporation</organization>
		</developer>

		<developer>
			<name>Aleks Seovic</name>
			<organization>Oracle Corporation</organization>
		</developer>

		<developer>
			<name>Jonathan Knight</name>
			<organization>Oracle Corporation</organization>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/coherence-community/coherence-spring.git</connection>
		<developerConnection>scm:git:https://github.com/coherence-community/coherence-spring.git</developerConnection>
		<url>https://github.com/coherence-community/coherence-spring</url>
		<tag>v4.2.0</tag>
	</scm>

	<modules>
		<module>coherence-spring-core</module>
		<module>coherence-spring-data</module>
		<module>coherence-spring-session</module>
		<module>coherence-spring-boot-starter</module>
		<module>coherence-spring-tests</module>
		<module>coherence-spring-docs</module>
		<module>coherence-spring-site</module>
		<module>samples</module>
	</modules>

	<properties>
		<coherence.spring.root>${basedir}</coherence.spring.root>

		<!-- project options -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>17</java.version>
		<maven.minimum.version>3.6.0</maven.minimum.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<skip-sign-artifacts>true</skip-sign-artifacts>

		<sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
		<sonar.coverage.jacoco.xmlReportPaths>
			${coherence.spring.root}/coherence-spring-docs/target/site/
			jacoco-aggregate/jacoco.xml
		</sonar.coverage.jacoco.xmlReportPaths>

		<!-- source code repository information -->
		<source.owner>coherence-community</source.owner>
		<source.repository>coherence-spring</source.repository>
		<source.branch>main</source.branch>

		<!-- plugin dependency versions (alphabetically) -->
		<asciidoctor-maven-plugin.version>3.0.0</asciidoctor-maven-plugin.version>
		<build-helper-maven-plugin.version>3.5.0</build-helper-maven-plugin.version>
		<doxia-module-markdown.version>1.0</doxia-module-markdown.version>
		<exec-maven-plugin.version>3.4.1</exec-maven-plugin.version>
		<flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
		<github.site-maven-plugin.version>0.12</github.site-maven-plugin.version>
		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		<dependency-check-maven.version>11.1.0</dependency-check-maven.version>
		<maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
		<maven-checkstyle-plugin.version>3.5.0</maven-checkstyle-plugin.version>
		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		<maven-deploy-plugin.version>3.1.3</maven-deploy-plugin.version>
		<maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
		<maven-gpg-plugin.version>3.2.7</maven-gpg-plugin.version>
		<maven-install-plugin.version>3.1.3</maven-install-plugin.version>
		<maven-jacoco-plugin.version>0.8.12</maven-jacoco-plugin.version>
		<maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.10.0</maven-javadoc-plugin.version>
		<maven-release-plugin.version>3.1.1</maven-release-plugin.version>
		<maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
		<maven-site-plugin.version>3.12.1</maven-site-plugin.version>
		<maven-source-plugin.version>3.3.1</maven-source-plugin.version>
		<maven-surefire-plugin.version>3.5.0</maven-surefire-plugin.version>
		<nexus-staging-maven-plugin.version>1.7.0</nexus-staging-maven-plugin.version>
		<spring-boot-maven-plugin.version>${spring-boot.version}</spring-boot-maven-plugin.version>

		<!-- Other plugin dependency versions -->
		<asciidoctorj-pdf.version>2.3.18</asciidoctorj-pdf.version>
		<checkstyle.version>10.18.1</checkstyle.version>
		<spring-javaformat-checkstyle.version>0.0.43</spring-javaformat-checkstyle.version>
		<spring-asciidoctor-extensions.version>0.6.3</spring-asciidoctor-extensions.version>
		<spring-doc-resources.version>0.2.5</spring-doc-resources.version>

		<!-- dependency versions (alphabetically) -->
		<assertj.version>3.25.3</assertj.version>
		<awaitility.version>4.2.2</awaitility.version>
		<bcprov.version>1.78.1</bcprov.version>
		<bedrock.version>7.0.2</bedrock.version>
		<coherence.groupId>com.oracle.coherence.ce</coherence.groupId>
		<coherence.version>24.09</coherence.version>
		<coherence-hibernate.version>3.0.2</coherence-hibernate.version>
		<classgraph.version>4.8.168</classgraph.version>
		<hamcrest.version>2.2</hamcrest.version>
		<hibernate.version>6.6.0.Final</hibernate.version>
		<hsqldb.version>2.7.2</hsqldb.version>
		<jackson-datatype.version>2.18.0</jackson-datatype.version>
		<jakartaee-api.version>10.0.0</jakartaee-api.version>
		<jakarta.annotation-api.version>2.1.1</jakarta.annotation-api.version>
		<jakarta.persistence-api.version>3.1.0</jakarta.persistence-api.version>
		<jakarta.servlet-api.version>5.0.0</jakarta.servlet-api.version>
		<jakarta.inject.version>2.0.1</jakarta.inject.version>
		<javassist.version>3.30.2-GA</javassist.version>
		<junit.version>5.10.2</junit.version>
		<log4j.version>2.24.0</log4j.version>
		<mockito.version>5.11.0</mockito.version>
		<modelmapper.version>3.2.0</modelmapper.version>
		<org.springframework.version>6.1.15</org.springframework.version>
		<reactor.version>3.6.10</reactor.version>
		<resilience4j.version>2.2.0</resilience4j.version>
		<slf4j-api.version>2.0.16</slf4j-api.version>
		<spring-boot.version>3.3.5</spring-boot.version>
		<spring-cloud.version>2023.0.3</spring-cloud.version>
		<spring-data-bom.version>2024.0.3</spring-data-bom.version>
		<spring-session.version>3.3.2</spring-session.version>
		<spring-security.version>6.3.4</spring-security.version>
		<tomcat.version>10.1.28</tomcat.version>
	</properties>

	<distributionManagement>
		<snapshotRepository>
			<id>sonatype</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>sonatype</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>snapshots-repo</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring-security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-crypto</artifactId>
				<version>${spring-security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring-security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-test</artifactId>
				<version>${spring-security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring-security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${org.springframework.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-bom</artifactId>
				<version>${spring-data-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-core</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-el</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-websocket</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-datatype.version}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk18on</artifactId>
				<version>${bcprov.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
                        <testCompilerArgument>-parameters</testCompilerArgument>
						<showDeprecation>true</showDeprecation>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.asciidoctor</groupId>
					<artifactId>asciidoctor-maven-plugin</artifactId>
					<version>${asciidoctor-maven-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.asciidoctor</groupId>
							<artifactId>asciidoctorj-pdf</artifactId>
							<version>${asciidoctorj-pdf.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${checkstyle.version}</version>
						</dependency>
						<dependency>
							<groupId>io.spring.javaformat</groupId>
							<artifactId>spring-javaformat-checkstyle</artifactId>
							<version>${spring-javaformat-checkstyle.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>checkstyle-validation</id>
							<phase>validate</phase>
							<inherited>true</inherited>
							<configuration>
								<configLocation>${coherence.spring.root}/src/checkstyle/checkstyle.xml</configLocation>
								<includeTestSourceDirectory>true</includeTestSourceDirectory>
							</configuration>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<id>enforce-plugin-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>${maven.minimum.version}</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${java.version}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<release>${java.version}</release>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
						<include>**/*Tests.java</include>
					</includes>
					<systemPropertyVariables>
						<coherence.localhost>127.0.0.1</coherence.localhost>
						<coherence.ttl>0</coherence.ttl>
						<java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
						<coherence.wka>127.0.0.1</coherence.wka>
					</systemPropertyVariables>
					<forkCount>1</forkCount>
					<reuseForks>false</reuseForks>
					<useSystemClassLoader>false</useSystemClassLoader>
					<useManifestOnlyJar>false</useManifestOnlyJar>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-license</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<phase>process-sources</phase>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>${coherence.spring.root}</directory>
									<targetPath>META-INF/</targetPath>
									<filtering>true</filtering>
									<includes>
										<include>LICENSE.txt</include>
										<include>THIRD_PARTY_LICENSES.txt</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<detectJavaApiLink>false</detectJavaApiLink>
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<inherited>true</inherited>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>${maven-install-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>${nexus-staging-maven-plugin.version}</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>sonatype</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>false</autoReleaseAfterClose>
					<skipLocalStaging>true</skipLocalStaging>
					<stagingProgressTimeoutMinutes>20</stagingProgressTimeoutMinutes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${flatten-maven-plugin.version}</version>
				<inherited>true</inherited>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
						<configuration>
							<updatePomFile>true</updatePomFile>
							<flattenMode>oss</flattenMode>
							<pomElements>
								<parent>expand</parent>
								<distributionManagement>remove</distributionManagement>
								<repositories>remove</repositories>
								<profiles>remove</profiles>
							</pomElements>
						</configuration>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-plugin.version}</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<goals>deploy</goals>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>${maven-gpg-plugin.version}</version>
				<configuration>
					<skip>${skip-sign-artifacts}</skip>
				</configuration>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<gpgArguments>
								<arg>--pinentry-mode</arg>
								<arg>loopback</arg>
							</gpgArguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jdk17</id>
			<properties>
				<java.version>17</java.version>
			</properties>
		</profile>
		<profile>
			<id>jdk21</id>
			<properties>
				<java.version>21</java.version>
			</properties>
		</profile>
		<profile>
			<id>owasp</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.owasp</groupId>
						<artifactId>dependency-check-maven</artifactId>
						<version>${dependency-check-maven.version}</version>
						<inherited>false</inherited>
						<configuration>
							<failBuildOnCVSS>7</failBuildOnCVSS>
							<skipProvidedScope>true</skipProvidedScope>
							<skipRuntimeScope>true</skipRuntimeScope>
							<skipTestScope>true</skipTestScope>
							<nvdValidForHours>96</nvdValidForHours>
							<nvdApiKey>${env.NVD_API_KEY}</nvdApiKey>
							<suppressionFiles>
								<suppressionFile>${coherence.spring.root}/src/main/config/dependency-check-suppression.xml</suppressionFile>
							</suppressionFiles>
							<assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>aggregate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>staging</id>
			<repositories>
				<repository>
					<id>sonatype-staging</id>
					<url>https://oss.sonatype.org/content/groups/staging/</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>
		</profile>
		<profile>
			<id>spring-repo</id>
			<activation>
				<property>
					<name>!skipSpringRepo</name>
				</property>
			</activation>
			<repositories>
				<repository>
					<id>spring-milestone</id>
					<name>Spring Milestone Repository</name>
					<url>https://repo.spring.io/milestone</url>
				</repository>
				<repository>
					<id>coherence-snapshots</id>
					<name>Coherence Snapshots Repository</name>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>spring-milestone</id>
					<name>Spring Milestone Repository</name>
					<url>https://repo.spring.io/milestone</url>
				</pluginRepository>
			</pluginRepositories>
		</profile>
		<profile>
			<id>versions</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<version>2.17.1</version>
						<configuration>
							<rulesUri>file:///${session.executionRootDirectory}/rules.xml</rulesUri>
						</configuration>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>display-property-updates</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${maven-jacoco-plugin.version}</version>
						<configuration>
							<excludes>
								<exclude>**/*com.oracle.coherence.spring.test**</exclude>
							</excludes>
						</configuration>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<formats>
										<format>XML</format>
									</formats>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
